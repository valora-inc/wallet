import { DigitalAsset } from '../config'
import { UserLocationData } from './fetchUserLocationData'
import { Providers } from './Providers'

type Entries<T> = Array<{ [K in keyof T]: [K, T[K]] }[keyof T]>
type ProviderAvailability = typeof providerAvailability
type SpecificProviderAvailability = { [K in keyof ProviderAvailability]: boolean }

export function getProviderAvailability(
  userLocation: UserLocationData | undefined
): SpecificProviderAvailability {
  const countryCodeAlpha2 = userLocation?.countryCodeAlpha2 ?? null
  const stateCode = userLocation?.region ?? null

  // tslint:disable-next-line: no-object-literal-type-assertion
  const features = {} as SpecificProviderAvailability
  for (const [key, value] of Object.entries(
    providerAvailability
  ) as Entries<ProviderAvailability>) {
    if (!countryCodeAlpha2) {
      features[key] = false
    } else {
      if (countryCodeAlpha2 === 'US' && (value as any).US && (value as any).US !== true) {
        features[key] = stateCode ? (value as any)[countryCodeAlpha2][stateCode] ?? false : false
      } else {
        features[key] = (value as any)[countryCodeAlpha2] ?? false
      }
    }
  }
  return features
}

const providerAvailability = {
  XANPOOL_RESTRICTED: {
    AF: true,
    AL: true,
    DZ: true,
    AS: true,
    AD: true,
    AO: true,
    AI: true,
    AQ: true,
    AG: true,
    AR: true,
    AM: true,
    AW: true,
    AT: true,
    AZ: true,
    BS: true,
    BH: true,
    BD: true,
    BB: true,
    BY: true,
    BE: true,
    BZ: true,
    BJ: true,
    BM: true,
    BT: true,
    BO: true,
    BQ: true,
    BA: true,
    BW: true,
    BV: true,
    BR: true,
    IO: true,
    BN: true,
    BG: true,
    BF: true,
    BI: true,
    CV: true,
    KH: true,
    CM: true,
    CA: true,
    KY: true,
    CF: true,
    TD: true,
    CL: true,
    CN: true,
    CX: true,
    CC: true,
    CO: true,
    KM: true,
    CD: true,
    CG: true,
    CK: true,
    CR: true,
    HR: true,
    CU: true,
    CW: true,
    CY: true,
    CZ: true,
    CI: true,
    DK: true,
    DJ: true,
    DM: true,
    DO: true,
    EC: true,
    EG: true,
    SV: true,
    GQ: true,
    ER: true,
    EE: true,
    SZ: true,
    ET: true,
    FK: true,
    FO: true,
    FJ: true,
    FI: true,
    FR: true,
    GF: true,
    PF: true,
    TF: true,
    GA: true,
    GM: true,
    GE: true,
    DE: true,
    GH: true,
    GI: true,
    GR: true,
    GL: true,
    GD: true,
    GP: true,
    GU: true,
    GT: true,
    GG: true,
    GN: true,
    GW: true,
    GY: true,
    HT: true,
    HM: true,
    VA: true,
    HN: true,
    HU: true,
    IS: true,
    IR: true,
    IQ: true,
    IE: true,
    IM: true,
    IL: true,
    IT: true,
    JM: true,
    JP: true,
    JE: true,
    JO: true,
    KZ: true,
    KE: true,
    KI: true,
    KP: true,
    KR: true,
    KW: true,
    KG: true,
    LA: true,
    LV: true,
    LB: true,
    LS: true,
    LR: true,
    LY: true,
    LI: true,
    LT: true,
    LU: true,
    MO: true,
    MG: true,
    MW: true,
    MV: true,
    ML: true,
    MT: true,
    MH: true,
    MQ: true,
    MR: true,
    MU: true,
    YT: true,
    MX: true,
    FM: true,
    MD: true,
    MC: true,
    MN: true,
    ME: true,
    MS: true,
    MA: true,
    MZ: true,
    MM: true,
    NA: true,
    NR: true,
    NP: true,
    NL: true,
    NC: true,
    NZ: true,
    NI: true,
    NE: true,
    NG: true,
    NU: true,
    NF: true,
    MP: true,
    NO: true,
    OM: true,
    PK: true,
    PW: true,
    PS: true,
    PA: true,
    PG: true,
    PY: true,
    PE: true,
    PN: true,
    PL: true,
    PT: true,
    PR: true,
    QA: true,
    MK: true,
    RO: true,
    RU: true,
    RW: true,
    RE: true,
    BL: true,
    SH: true,
    KN: true,
    LC: true,
    MF: true,
    PM: true,
    VC: true,
    WS: true,
    SM: true,
    ST: true,
    SA: true,
    SN: true,
    RS: true,
    SC: true,
    SL: true,
    SX: true,
    SK: true,
    SI: true,
    SB: true,
    SO: true,
    ZA: true,
    GS: true,
    SS: true,
    ES: true,
    LK: true,
    SD: true,
    SR: true,
    SJ: true,
    SE: true,
    CH: true,
    SY: true,
    TW: true,
    TJ: true,
    TZ: true,
    TL: true,
    TG: true,
    TK: true,
    TO: true,
    TT: true,
    TN: true,
    TR: true,
    TM: true,
    TC: true,
    TV: true,
    UG: true,
    UA: true,
    AE: true,
    GB: true,
    UM: true,
    US: true,
    UY: true,
    UZ: true,
    VU: true,
    VE: true,
    VG: true,
    VI: true,
    WF: true,
    EH: true,
    YE: true,
    ZM: true,
    ZW: true,
    AX: true,
  },
  MOONPAY_RESTRICTED: {
    US: true,
    AF: true,
    AL: true,
    BS: true,
    BD: true,
    BB: true,
    BO: true,
    BW: true,
    KH: true,
    CN: true,
    CU: true,
    EC: true,
    GH: true,
    IS: true,
    IR: true,
    JM: true,
    MU: true,
    MN: true,
    MM: true,
    NI: true,
    KP: true,
    PK: true,
    PA: true,
    SS: true,
    SD: true,
    SY: true,
    UG: true,
    VE: true,
    YE: true,
    ZW: true,
    AS: true,
    GU: true,
    MP: true,
    VI: true,
  },
  SIMPLEX_RESTRICTED: {
    US: {
      AK: true,
      HI: true,
      LA: true,
      NV: true,
      NM: true,
      NY: true,
      VT: true,
      WA: true,
    },
    AF: true,
    AL: true,
    BS: true,
    BB: true,
    BW: true,
    KH: true,
    CU: true,
    PH: true,
    HT: true,
    MT: true,
    IR: true,
    IQ: true,
    JM: true,
    KP: true,
    KG: true,
    LB: true,
    LY: true,
    MU: true,
    MN: true,
    MM: true,
    NI: true,
    PK: true,
    PA: true,
    WS: true,
    SO: true,
    SS: true,
    SD: true,
    SY: true,
    TT: true,
    UG: true,
    VI: true,
    VU: true,
    VE: true,
    YE: true,
    ZW: true,
  },
  RAMP_RESTRICTED: {
    AF: true,
    DZ: true,
    AS: true,
    AI: true,
    AQ: true,
    AM: true,
    AW: true,
    AZ: true,
    BS: true,
    BD: true,
    BB: true,
    BY: true,
    BO: true,
    BQ: true,
    BV: true,
    IO: true,
    BN: true,
    KH: true,
    KY: true,
    CF: true,
    CN: true,
    CO: true,
    CD: true,
    CU: true,
    CW: true,
    CI: true,
    EC: true,
    ER: true,
    FJ: true,
    TF: true,
    HM: true,
    VA: true,
    ID: true,
    IR: true,
    IQ: true,
    JM: true,
    JP: true,
    JO: true,
    KP: true,
    KG: true,
    LS: true,
    LY: true,
    MO: true,
    MU: true,
    MN: true,
    MS: true,
    MA: true,
    MM: true,
    NA: true,
    NP: true,
    NI: true,
    OM: true,
    PK: true,
    PW: true,
    PS: true,
    PA: true,
    PN: true,
    QA: true,
    MK: true,
    RU: true,
    SH: true,
    KN: true,
    MF: true,
    VC: true,
    WS: true,
    ST: true,
    SA: true,
    SC: true,
    SX: true,
    SO: true,
    ZA: true,
    GS: true,
    SS: true,
    SD: true,
    SJ: true,
    SY: true,
    TW: true,
    TT: true,
    UG: true,
    UM: true,
    US: true,
    VU: true,
    VE: true,
    VN: true,
    VG: true,
    VI: true,
    EH: true,
    YE: true,
    ZM: true,
    ZW: true,
  },
  TRANSAK_RESTRICTED: {
    AF: true,
    AL: true,
    AS: true,
    AD: true,
    AO: true,
    AI: true,
    AQ: true,
    AG: true,
    AM: true,
    AW: true,
    AZ: true,
    BS: true,
    BH: true,
    BD: true,
    BB: true,
    BZ: true,
    BJ: true,
    BM: true,
    BT: true,
    BQ: true,
    BA: true,
    BW: true,
    BV: true,
    IO: true,
    BN: true,
    BF: true,
    BI: true,
    CV: true,
    KH: true,
    CM: true,
    KY: true,
    CF: true,
    TD: true,
    CN: true,
    CX: true,
    CC: true,
    KM: true,
    CD: true,
    CG: true,
    CK: true,
    HR: true,
    CU: true,
    CW: true,
    CI: true,
    DJ: true,
    DM: true,
    EC: true,
    EG: true,
    SV: true,
    GQ: true,
    ER: true,
    SZ: true,
    ET: true,
    FK: true,
    FO: true,
    FJ: true,
    GF: true,
    PF: true,
    TF: true,
    GA: true,
    GM: true,
    GE: true,
    GH: true,
    GI: true,
    GL: true,
    GD: true,
    GP: true,
    GU: true,
    GT: true,
    GG: true,
    GN: true,
    GW: true,
    GY: true,
    HT: true,
    HM: true,
    VA: true,
    HN: true,
    HU: true,
    IR: true,
    IQ: true,
    IM: true,
    JM: true,
    JE: true,
    JO: true,
    KZ: true,
    KE: true,
    KI: true,
    KP: true,
    KW: true,
    KG: true,
    LA: true,
    LB: true,
    LS: true,
    LR: true,
    LY: true,
    LI: true,
    LT: true,
    MO: true,
    MG: true,
    MW: true,
    MV: true,
    ML: true,
    MH: true,
    MQ: true,
    MR: true,
    MU: true,
    YT: true,
    FM: true,
    MD: true,
    MC: true,
    MN: true,
    ME: true,
    MS: true,
    MA: true,
    MZ: true,
    MM: true,
    NA: true,
    NR: true,
    NC: true,
    NI: true,
    NE: true,
    NG: true,
    NU: true,
    NF: true,
    MP: true,
    OM: true,
    PK: true,
    PW: true,
    PS: true,
    PA: true,
    PG: true,
    PN: true,
    PR: true,
    QA: true,
    MK: true,
    RU: true,
    RW: true,
    RE: true,
    BL: true,
    SH: true,
    KN: true,
    LC: true,
    MF: true,
    PM: true,
    VC: true,
    WS: true,
    SM: true,
    ST: true,
    SA: true,
    SN: true,
    RS: true,
    SC: true,
    SL: true,
    SX: true,
    SB: true,
    SO: true,
    GS: true,
    SS: true,
    LK: true,
    SD: true,
    SR: true,
    SJ: true,
    SY: true,
    TW: true,
    TJ: true,
    TL: true,
    TG: true,
    TK: true,
    TO: true,
    TT: true,
    TN: true,
    TM: true,
    TC: true,
    TV: true,
    UG: true,
    UA: true,
    AE: true,
    GB: true,
    UM: true,
    US: true,
    UY: true,
    UZ: true,
    VU: true,
    VE: true,
    VG: true,
    VI: true,
    WF: true,
    EH: true,
    YE: true,
    ZM: true,
    ZW: true,
    AX: true,
  },
}

export const countryToCurrency: { [country: string]: string } = {
  BD: 'BDT',
  BE: 'EUR',
  BF: 'XOF',
  BG: 'BGN',
  BA: 'BAM',
  BB: 'BBD',
  WF: 'XPF',
  BL: 'EUR',
  BM: 'BMD',
  BN: 'BND',
  BO: 'BOB',
  BH: 'BHD',
  BI: 'BIF',
  BJ: 'XOF',
  BT: 'BTN',
  JM: 'JMD',
  BV: 'NOK',
  BW: 'BWP',
  WS: 'WST',
  BQ: 'USD',
  BR: 'BRL',
  BS: 'BSD',
  JE: 'GBP',
  BY: 'BYR',
  BZ: 'BZD',
  RU: 'RUB',
  RW: 'RWF',
  RS: 'RSD',
  TL: 'USD',
  RE: 'EUR',
  TM: 'TMT',
  TJ: 'TJS',
  RO: 'RON',
  TK: 'NZD',
  GW: 'XOF',
  GU: 'USD',
  GT: 'GTQ',
  GS: 'GBP',
  GR: 'EUR',
  GQ: 'XAF',
  GP: 'EUR',
  JP: 'JPY',
  GY: 'GYD',
  GG: 'GBP',
  GF: 'EUR',
  GE: 'GEL',
  GD: 'XCD',
  GB: 'GBP',
  GA: 'XAF',
  SV: 'USD',
  GN: 'GNF',
  GM: 'GMD',
  GL: 'DKK',
  GI: 'GIP',
  GH: 'GHS',
  OM: 'OMR',
  TN: 'TND',
  JO: 'JOD',
  HR: 'HRK',
  HT: 'HTG',
  HU: 'HUF',
  HK: 'HKD',
  HN: 'HNL',
  HM: 'AUD',
  VE: 'VEF',
  PR: 'USD',
  PS: 'ILS',
  PW: 'USD',
  PT: 'EUR',
  SJ: 'NOK',
  PY: 'PYG',
  IQ: 'IQD',
  PA: 'PAB',
  PF: 'XPF',
  PG: 'PGK',
  PE: 'PEN',
  PK: 'PKR',
  PH: 'PHP',
  PN: 'NZD',
  PL: 'PLN',
  PM: 'EUR',
  ZM: 'ZMK',
  EH: 'MAD',
  EE: 'EUR',
  EG: 'EGP',
  ZA: 'ZAR',
  EC: 'USD',
  IT: 'EUR',
  VN: 'VND',
  SB: 'SBD',
  ET: 'ETB',
  SO: 'SOS',
  ZW: 'ZWL',
  SA: 'SAR',
  ES: 'EUR',
  ER: 'ERN',
  ME: 'EUR',
  MD: 'MDL',
  MG: 'MGA',
  MF: 'EUR',
  MA: 'MAD',
  MC: 'EUR',
  UZ: 'UZS',
  MM: 'MMK',
  ML: 'XOF',
  MO: 'MOP',
  MN: 'MNT',
  MH: 'USD',
  MK: 'MKD',
  MU: 'MUR',
  MT: 'EUR',
  MW: 'MWK',
  MV: 'MVR',
  MQ: 'EUR',
  MP: 'USD',
  MS: 'XCD',
  MR: 'MRO',
  IM: 'GBP',
  UG: 'UGX',
  TZ: 'TZS',
  MY: 'MYR',
  MX: 'MXN',
  IL: 'ILS',
  FR: 'EUR',
  IO: 'USD',
  SH: 'SHP',
  FI: 'EUR',
  FJ: 'FJD',
  FK: 'FKP',
  FM: 'USD',
  FO: 'DKK',
  NI: 'NIO',
  NL: 'EUR',
  NO: 'NOK',
  NA: 'NAD',
  VU: 'VUV',
  NC: 'XPF',
  NE: 'XOF',
  NF: 'AUD',
  NG: 'NGN',
  NZ: 'NZD',
  NP: 'NPR',
  NR: 'AUD',
  NU: 'NZD',
  CK: 'NZD',
  XK: 'EUR',
  CI: 'XOF',
  CH: 'CHF',
  CO: 'COP',
  CN: 'CNY',
  CM: 'XAF',
  CL: 'CLP',
  CC: 'AUD',
  CA: 'CAD',
  CG: 'XAF',
  CF: 'XAF',
  CD: 'CDF',
  CZ: 'CZK',
  CY: 'EUR',
  CX: 'AUD',
  CR: 'CRC',
  CW: 'ANG',
  CV: 'CVE',
  CU: 'CUP',
  SZ: 'SZL',
  SY: 'SYP',
  SX: 'ANG',
  KG: 'KGS',
  KE: 'KES',
  SS: 'SSP',
  SR: 'SRD',
  KI: 'AUD',
  KH: 'KHR',
  KN: 'XCD',
  KM: 'KMF',
  ST: 'STD',
  SK: 'EUR',
  KR: 'KRW',
  SI: 'EUR',
  KP: 'KPW',
  KW: 'KWD',
  SN: 'XOF',
  SM: 'EUR',
  SL: 'SLL',
  SC: 'SCR',
  KZ: 'KZT',
  KY: 'KYD',
  SG: 'SGD',
  SE: 'SEK',
  SD: 'SDG',
  DO: 'DOP',
  DM: 'XCD',
  DJ: 'DJF',
  DK: 'DKK',
  VG: 'USD',
  DE: 'EUR',
  YE: 'YER',
  DZ: 'DZD',
  US: 'USD',
  UY: 'UYU',
  YT: 'EUR',
  UM: 'USD',
  LB: 'LBP',
  LC: 'XCD',
  LA: 'LAK',
  TV: 'AUD',
  TW: 'TWD',
  TT: 'TTD',
  TR: 'TRY',
  LK: 'LKR',
  LI: 'CHF',
  LV: 'EUR',
  TO: 'TOP',
  LT: 'LTL',
  LU: 'EUR',
  LR: 'LRD',
  LS: 'LSL',
  TH: 'THB',
  TF: 'EUR',
  TG: 'XOF',
  TD: 'XAF',
  TC: 'USD',
  LY: 'LYD',
  VA: 'EUR',
  VC: 'XCD',
  AE: 'AED',
  AD: 'EUR',
  AG: 'XCD',
  AF: 'AFN',
  AI: 'XCD',
  VI: 'USD',
  IS: 'ISK',
  IR: 'IRR',
  AM: 'AMD',
  AL: 'ALL',
  AO: 'AOA',
  AS: 'USD',
  AR: 'ARS',
  AU: 'AUD',
  AT: 'EUR',
  AW: 'AWG',
  IN: 'INR',
  AX: 'EUR',
  AZ: 'AZN',
  IE: 'EUR',
  ID: 'IDR',
  UA: 'UAH',
  QA: 'QAR',
  MZ: 'MZN',
}

interface BankingSystemToCountry {
  [bankingSystem: string]: {
    [countryCode: string]: boolean
  }
}

export const bankingSystemToCountry: BankingSystemToCountry = {
  sepa: {
    FI: true,
    AD: true,
    AT: true,
    PT: true,
    BE: true,
    BG: true,
    ES: true,
    HR: true,
    CY: true,
    CZ: true,
    DK: true,
    EE: true,
    FR: true,
    GF: true,
    DE: true,
    GI: true,
    GR: true,
    GP: true,
    HU: true,
    IS: true,
    IE: true,
    IT: true,
    LV: true,
    LI: true,
    LT: true,
    LU: true,
    MT: true,
    MQ: true,
    YT: true,
    MC: true,
    NL: true,
    NO: true,
    PL: true,
    RE: true,
    RO: true,
    BL: true,
    MF: true,
    PM: true,
    SK: true,
    SI: true,
    SE: true,
    CH: true,
    GB: true,
  },
  gbp: {
    GB: true,
  },
  neft: {
    IN: true,
  },
}

const providerAssetsSupported: Map<Providers, DigitalAsset[]> = new Map([
  [Providers.Simplex, [DigitalAsset.CUSD, DigitalAsset.CELO]],
  [Providers.Ramp, [DigitalAsset.CUSD, DigitalAsset.CELO, DigitalAsset.CEUR]],
  [Providers.Moonpay, [DigitalAsset.CUSD, DigitalAsset.CELO]],
  [Providers.Xanpool, [DigitalAsset.CUSD, DigitalAsset.CELO]],
  [Providers.Transak, [DigitalAsset.CUSD, DigitalAsset.CELO]],
])

export const providerSupportsAsset = (provider: Providers, asset: DigitalAsset) => {
  const supportedAssets = providerAssetsSupported.get(provider)

  if (!supportedAssets) {
    throw new Error('Provider not included in the providerAssetsSupported Map')
  }

  return supportedAssets.includes(asset)
}
