// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DrawerNavigator renders correctly  1`] = `
<GestureHandlerRootView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "transform": Array [
                Object {
                  "translateX": AnimatedValue {
                    " __value": 0,
                  },
                },
              ],
            },
            Array [
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ],
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            enabled={true}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              enabled={true}
              pointerEvents="auto"
              removeClippedSubviews={true}
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "opacity": 1,
                    },
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0, 0, 0, 0.5)",
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {},
              Object {
                "opacity": undefined,
                "zIndex": -1,
              },
              Object {
                "backgroundColor": "rgba(0, 0, 0, 0.5)",
              },
            ]
          }
        />
      </View>
      <View
        accessibilityViewIsModal={false}
        onLayout={[Function]}
        removeClippedSubviews={true}
        style={
          Array [
            Object {
              "backgroundColor": "white",
              "maxWidth": "100%",
            },
            Object {
              "opacity": AnimatedValue {
                " __value": 0,
              },
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            },
            Array [
              Object {
                "bottom": 0,
                "position": "absolute",
                "top": 0,
                "width": "80%",
              },
              Object {
                "left": AnimatedValue {
                  " __value": -320,
                },
              },
              Object {
                "zIndex": 0,
              },
            ],
            Array [
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "width": 320,
              },
              false,
              undefined,
            ],
          ]
        }
      >
        <RCTScrollView
          activeBackgroundColor="#EDEEEF"
          contentContainerStyle={
            Array [
              Object {
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 4,
              },
              undefined,
            ]
          }
          descriptors={
            Object {
              "BackupIntroduction-9j19lG2Ke1GGr2SzcNXCj": Object {
                "navigation": Object {
                  "addListener": [Function],
                  "canGoBack": [Function],
                  "closeDrawer": [Function],
                  "dangerouslyGetParent": [Function],
                  "dangerouslyGetState": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "isFocused": [Function],
                  "jumpTo": [Function],
                  "navigate": [Function],
                  "openDrawer": [Function],
                  "removeListener": [Function],
                  "reset": [Function],
                  "setOptions": [Function],
                  "setParams": [Function],
                  "toggleDrawer": [Function],
                },
                "options": Object {
                  "drawerIcon": [Function],
                  "title": "accountKey",
                },
                "render": [Function],
              },
              "FiatExchange-M-pfi18LBR9OfhsccIJRb": Object {
                "navigation": Object {
                  "addListener": [Function],
                  "canGoBack": [Function],
                  "closeDrawer": [Function],
                  "dangerouslyGetParent": [Function],
                  "dangerouslyGetState": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "isFocused": [Function],
                  "jumpTo": [Function],
                  "navigate": [Function],
                  "openDrawer": [Function],
                  "removeListener": [Function],
                  "reset": [Function],
                  "setOptions": [Function],
                  "setParams": [Function],
                  "toggleDrawer": [Function],
                },
                "options": Object {
                  "drawerIcon": [Function],
                  "title": "addAndWithdraw",
                },
                "render": [Function],
              },
              "GoldEducation-iExDu_0Mp4h00MYrw_shX": Object {
                "navigation": Object {
                  "addListener": [Function],
                  "canGoBack": [Function],
                  "closeDrawer": [Function],
                  "dangerouslyGetParent": [Function],
                  "dangerouslyGetState": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "isFocused": [Function],
                  "jumpTo": [Function],
                  "navigate": [Function],
                  "openDrawer": [Function],
                  "removeListener": [Function],
                  "reset": [Function],
                  "setOptions": [Function],
                  "setParams": [Function],
                  "toggleDrawer": [Function],
                },
                "options": Object {
                  "cardStyleInterpolator": [Function],
                  "drawerIcon": [Function],
                  "gestureDirection": "vertical",
                  "headerStyleInterpolator": [Function],
                  "title": "celoGold",
                  "transitionSpec": Object {
                    "close": Object {
                      "animation": "timing",
                      "config": Object {
                        "duration": 150,
                        "easing": [Function],
                      },
                    },
                    "open": Object {
                      "animation": "timing",
                      "config": Object {
                        "duration": 350,
                        "easing": [Function],
                      },
                    },
                  },
                },
                "render": [Function],
              },
              "Settings-5qGatlbK4dW-3R1tAhERQ": Object {
                "navigation": Object {
                  "addListener": [Function],
                  "canGoBack": [Function],
                  "closeDrawer": [Function],
                  "dangerouslyGetParent": [Function],
                  "dangerouslyGetState": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "isFocused": [Function],
                  "jumpTo": [Function],
                  "navigate": [Function],
                  "openDrawer": [Function],
                  "removeListener": [Function],
                  "reset": [Function],
                  "setOptions": [Function],
                  "setParams": [Function],
                  "toggleDrawer": [Function],
                },
                "options": Object {
                  "drawerIcon": [Function],
                  "title": "settings",
                },
                "render": [Function],
              },
              "Support-hYht5ZELoIjWizdbohWfw": Object {
                "navigation": Object {
                  "addListener": [Function],
                  "canGoBack": [Function],
                  "closeDrawer": [Function],
                  "dangerouslyGetParent": [Function],
                  "dangerouslyGetState": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "isFocused": [Function],
                  "jumpTo": [Function],
                  "navigate": [Function],
                  "openDrawer": [Function],
                  "removeListener": [Function],
                  "reset": [Function],
                  "setOptions": [Function],
                  "setParams": [Function],
                  "toggleDrawer": [Function],
                },
                "options": Object {
                  "drawerIcon": [Function],
                  "title": "help",
                },
                "render": [Function],
              },
              "WalletHome-Ag1zCIS7SasFu4b9HdYub": Object {
                "navigation": Object {
                  "addListener": [Function],
                  "canGoBack": [Function],
                  "closeDrawer": [Function],
                  "dangerouslyGetParent": [Function],
                  "dangerouslyGetState": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "isFocused": [Function],
                  "jumpTo": [Function],
                  "navigate": [Function],
                  "openDrawer": [Function],
                  "removeListener": [Function],
                  "reset": [Function],
                  "setOptions": [Function],
                  "setParams": [Function],
                  "toggleDrawer": [Function],
                },
                "options": Object {
                  "drawerIcon": [Function],
                  "title": "home",
                },
                "render": [Function],
              },
            }
          }
          labelStyle={
            Array [
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              Object {
                "fontWeight": "normal",
                "marginLeft": -20,
              },
            ]
          }
          navigation={
            Object {
              "canGoBack": [Function],
              "closeDrawer": [Function],
              "dangerouslyGetParent": [Function],
              "dangerouslyGetState": [Function],
              "dispatch": [Function],
              "emit": [Function],
              "goBack": [Function],
              "isFocused": [Function],
              "jumpTo": [Function],
              "navigate": [Function],
              "openDrawer": [Function],
              "reset": [Function],
              "setParams": [Function],
              "toggleDrawer": [Function],
            }
          }
          progress={0}
          state={
            Object {
              "history": Array [
                Object {
                  "key": "WalletHome-Ag1zCIS7SasFu4b9HdYub",
                  "type": "route",
                },
              ],
              "index": 0,
              "key": "drawer-QHqOugZkTQGULwUWwSOyx",
              "routeNames": Array [
                "WalletHome",
                "GoldEducation",
                "BackupIntroduction",
                "FiatExchange",
                "Settings",
                "Support",
              ],
              "routes": Array [
                Object {
                  "key": "WalletHome-Ag1zCIS7SasFu4b9HdYub",
                  "name": "WalletHome",
                  "params": undefined,
                },
                Object {
                  "key": "GoldEducation-iExDu_0Mp4h00MYrw_shX",
                  "name": "GoldEducation",
                  "params": undefined,
                },
                Object {
                  "key": "BackupIntroduction-9j19lG2Ke1GGr2SzcNXCj",
                  "name": "BackupIntroduction",
                  "params": undefined,
                },
                Object {
                  "key": "FiatExchange-M-pfi18LBR9OfhsccIJRb",
                  "name": "FiatExchange",
                  "params": undefined,
                },
                Object {
                  "key": "Settings-5qGatlbK4dW-3R1tAhERQ",
                  "name": "Settings",
                  "params": undefined,
                },
                Object {
                  "key": "Support-hYht5ZELoIjWizdbohWfw",
                  "name": "Support",
                  "params": undefined,
                },
              ],
              "stale": false,
              "type": "drawer",
            }
          }
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "marginLeft": 16,
                  "marginRight": 16,
                  "marginTop": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        Object {
                          "backgroundColor": "hsl(0, 53%, 93%)",
                          "borderRadius": 32,
                          "height": 64,
                          "width": 64,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#FFFFFF",
                            "fontFamily": "Inter-Medium",
                            "fontSize": 16,
                          },
                          Object {
                            "color": "hsl(0, 67%, 24%)",
                            "fontSize": 32,
                          },
                        ]
                      }
                    >
                      J
                    </Text>
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#DEF8EA",
                        "borderRadius": 15,
                        "flexDirection": "row",
                        "height": 30,
                        "justifyContent": "center",
                        "paddingHorizontal": 12,
                      },
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                  testID="EarnRewards"
                >
                  <svg
                    fill="none"
                    height="18"
                    viewBox="0 0 16 18"
                    width="16"
                  >
                    <path
                      d="M16 7.30187C16 3.82117 13.1649 0.986084 9.68421 0.986084C7.04561 0.986084 4.8 2.58608 3.84561 4.88784C1.6 5.84222 0 8.08784 0 10.6984C0 14.1791 2.83509 17.0142 6.31579 17.0142C8.95439 17.0142 11.2 15.4142 12.1544 13.1124C14.3719 12.158 16 9.9124 16 7.30187ZM6.31579 15.4422C3.70526 15.4422 1.57193 13.3089 1.57193 10.6984C1.57193 9.21064 2.27368 7.86328 3.36842 6.9931C3.36842 7.10538 3.36842 7.21766 3.36842 7.30187C3.36842 10.7826 6.20351 13.6177 9.68421 13.6177C9.82456 13.6177 9.93684 13.6177 10.0772 13.6177C9.17895 14.7405 7.83158 15.4422 6.31579 15.4422ZM10.9193 11.8773C10.5263 11.9896 10.1053 12.0457 9.68421 12.0457C7.07368 12.0457 4.94035 9.9124 4.94035 7.30187C4.94035 6.88082 4.99649 6.48784 5.10877 6.12293C5.50175 6.01065 5.92281 5.95451 6.34386 5.95451C8.95439 5.95451 11.0877 8.08784 11.0877 10.6984C11.0596 11.1194 11.0035 11.5124 10.9193 11.8773ZM12.6316 11.0071C12.6316 10.8949 12.6316 10.7826 12.6316 10.6984C12.6316 7.21766 9.79649 4.38257 6.31579 4.38257C6.17544 4.38257 6.06316 4.38257 5.92281 4.38257C6.79298 3.25977 8.14035 2.55801 9.65614 2.55801C12.2667 2.55801 14.4 4.69135 14.4 7.30187C14.4 8.81766 13.6982 10.137 12.6316 11.0071Z"
                      fill="#1AB775"
                    />
                  </svg>
                  <Text
                    style={
                      Object {
                        "color": "#08CB7A",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                        "marginLeft": 5,
                      }
                    }
                  >
                    Earn
                  </Text>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Jost-Medium",
                    "fontSize": 18,
                    "lineHeight": 24,
                    "marginTop": 8,
                  }
                }
              >
                John Doe
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginRight": 4,
                      },
                    ]
                  }
                >
                  🇺🇸
                </Text>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                      Object {
                        "color": "#9CA4A9",
                      },
                    ]
                  }
                >
                  +1 415-555-6666
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignSelf": "stretch",
                    "backgroundColor": "#EDEEEF",
                    "height": 1,
                    "marginBottom": 12,
                    "marginTop": 20,
                  }
                }
              />
            </View>
            <View
              collapsable={false}
              progress={0}
              style={
                Array [
                  Object {
                    "marginHorizontal": 10,
                    "marginVertical": 4,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "#EDEEEF",
                    "borderRadius": 4,
                  },
                  undefined,
                ]
              }
              testID="DrawerItem/home"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "selected": true,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "padding": 8,
                      },
                      Object {
                        "borderRadius": 4,
                      },
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <path
                      d="M13.486 13.12v-.001c.445-2.135 1.407-4.045 2.618-5.503 1.21-1.459 2.647-2.358 3.94-2.583l.035-.006.035-.009a.254.254 0 01.049-.008c.028-.002.061-.002.148-.002h.028l.028-.002a3.495 3.495 0 012.828 1.141c1.086 1.21 1.587 3.199 1.148 5.599h0v.006c-.369 2.085-1.29 4.001-2.504 5.449-1.22 1.454-2.682 2.374-4.111 2.604-1.263.192-2.352-.161-3.136-1h0l-.007-.008c-1.133-1.19-1.614-3.226-1.099-5.676z"
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                    <path
                      clipRule="evenodd"
                      d="M8.185 20.467l-.001.004c-.472 2.247.012 3.906.844 4.78l.007.007.007.008c.533.57 1.278.842 2.25.695 1.128-.182 2.389-.934 3.5-2.259 1.1-1.312 1.947-3.066 2.284-4.98l.003-.012c.4-2.186-.085-3.826-.903-4.744a2.495 2.495 0 00-2.033-.817l-.056.003h-.095l-.057.01c-.995.173-2.236.903-3.342 2.236-1.108 1.335-1.998 3.095-2.408 5.069zm9.468-7.85c1.353 1.504 1.87 3.84 1.393 6.453-.796 4.512-3.981 8.313-7.445 8.867-1.552.238-2.986-.198-4.02-1.306-1.434-1.505-1.912-3.92-1.354-6.572.477-2.296 1.513-4.354 2.826-5.938 1.314-1.583 2.946-2.652 4.539-2.93.16-.039.279-.039.438-.039 1.393-.08 2.667.436 3.623 1.465z"
                      fill="#B4B9BD"
                      fillRule="evenodd"
                    />
                  </svg>
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "marginRight": 32,
                        },
                        Object {
                          "marginLeft": 32,
                          "marginVertical": 5,
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "color": "rgb(0, 122, 255)",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "color": "#2E3338",
                              "fontFamily": "Inter-Regular",
                              "fontSize": 16,
                              "lineHeight": 22,
                            },
                            Object {
                              "fontWeight": "normal",
                              "marginLeft": -20,
                            },
                          ],
                        ]
                      }
                    >
                      home
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              progress={0}
              style={
                Array [
                  Object {
                    "marginHorizontal": 10,
                    "marginVertical": 4,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                  },
                  undefined,
                ]
              }
              testID="DrawerItem/celoGold"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "selected": false,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "padding": 8,
                      },
                      Object {
                        "borderRadius": 4,
                      },
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    testID="CELO"
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <path
                      d="M21.724 13.992v-.002a8.49 8.49 0 011.739-3.658c.801-.966 1.73-1.533 2.53-1.671l.034-.007.024-.005a.718.718 0 01.072 0h.028l.028-.003a2.097 2.097 0 011.702.686c.664.743 1.005 2.005.715 3.592h0l-.002.006c-.244 1.384-.855 2.654-1.657 3.61-.807.961-1.751 1.543-2.643 1.687-.78.118-1.423-.1-1.885-.595h0l-.007-.008c-.687-.72-1.02-2.007-.678-3.632z"
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                    <path
                      d="M3 20.375l6.308-8.834c.993-1.39 3.16-.976 3.57.684l2.795 11.348c.417 1.692 2.647 2.079 3.61.627L21 21.607"
                      stroke="#B4B9BD"
                      strokeLinecap="round"
                      strokeWidth={2}
                    />
                  </svg>
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "marginRight": 32,
                        },
                        Object {
                          "marginLeft": 32,
                          "marginVertical": 5,
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 28, 30, 0.68)",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "color": "#2E3338",
                              "fontFamily": "Inter-Regular",
                              "fontSize": 16,
                              "lineHeight": 22,
                            },
                            Object {
                              "fontWeight": "normal",
                              "marginLeft": -20,
                            },
                          ],
                        ]
                      }
                    >
                      celoGold
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              progress={0}
              style={
                Array [
                  Object {
                    "marginHorizontal": 10,
                    "marginVertical": 4,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                  },
                  undefined,
                ]
              }
              testID="DrawerItem/accountKey"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "selected": false,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "padding": 8,
                      },
                      Object {
                        "borderRadius": 4,
                      },
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <path
                      d="M18.943 10.143a1 1 0 00-2 0h2zm-1 12.771h1a1 1 0 00-1-1v1zm0-11.828v1a1 1 0 001-1h-1zm-2-6.086H8v2h7.943V5zM8 29h7.943v-2H8v2zm-3-6.086V26h2v-3.086H5zM18.943 26v-3.086h-2V26h2zm-2-3.086v.315h2v-.315h-2zM6 23.914h11.943v-2H6v2zM16.943 8v3.086h2V8h-2zm2 3.086v-.943h-2v.943h2zM5 8v3.086h2V8H5zm0 3.086v11.828h2V11.086H5zm12.943-1h-6.286v2h6.286v-2zm-6.286 0H6v2h5.657v-2zM15.943 29a3 3 0 003-3h-2a1 1 0 01-1 1v2zM8 27a1 1 0 01-1-1H5a3 3 0 003 3v-2zM8 5a3 3 0 00-3 3h2a1 1 0 011-1V5zm7.943 2a1 1 0 011 1h2a3 3 0 00-3-3v2z"
                      fill="#B4B9BD"
                    />
                    <path
                      d="M25 15.5h-6m-4 3v-3h4m0 0v3"
                      stroke="#B4B9BD"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                    />
                    <circle
                      cx={27.5}
                      cy={15.5}
                      r={2.5}
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                  </svg>
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "marginRight": 32,
                        },
                        Object {
                          "marginLeft": 32,
                          "marginVertical": 5,
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 28, 30, 0.68)",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "color": "#2E3338",
                              "fontFamily": "Inter-Regular",
                              "fontSize": 16,
                              "lineHeight": 22,
                            },
                            Object {
                              "fontWeight": "normal",
                              "marginLeft": -20,
                            },
                          ],
                        ]
                      }
                    >
                      accountKey
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              progress={0}
              style={
                Array [
                  Object {
                    "marginHorizontal": 10,
                    "marginVertical": 4,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                  },
                  undefined,
                ]
              }
              testID="DrawerItem/addAndWithdraw"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "selected": false,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "padding": 8,
                      },
                      Object {
                        "borderRadius": 4,
                      },
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    testID="add-and-withdraw"
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <path
                      d="M23 22V9m0 0l-4 4m4-4l4 4M10 9v13m0 0l4-4m-4 4l-4-4"
                      stroke="#B4B9BD"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                    />
                  </svg>
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "marginRight": 32,
                        },
                        Object {
                          "marginLeft": 32,
                          "marginVertical": 5,
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 28, 30, 0.68)",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "color": "#2E3338",
                              "fontFamily": "Inter-Regular",
                              "fontSize": 16,
                              "lineHeight": 22,
                            },
                            Object {
                              "fontWeight": "normal",
                              "marginLeft": -20,
                            },
                          ],
                        ]
                      }
                    >
                      addAndWithdraw
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              progress={0}
              style={
                Array [
                  Object {
                    "marginHorizontal": 10,
                    "marginVertical": 4,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                  },
                  undefined,
                ]
              }
              testID="DrawerItem/settings"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "selected": false,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "padding": 8,
                      },
                      Object {
                        "borderRadius": 4,
                      },
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    testID="Settings"
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <path
                      d="M17 8.5H7.5a1.5 1.5 0 100 3H17v-3z"
                      fill="#B4B9BD"
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                    <path
                      d="M14 24.5h9a2 2 0 002-2v0a2 2 0 00-2-2h-9"
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                    <circle
                      cx={21.5}
                      cy={9.5}
                      r={4.5}
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                    <circle
                      cx={10.5}
                      cy={22.5}
                      r={4.5}
                      stroke="#B4B9BD"
                      strokeWidth={2}
                      transform="rotate(-180 10.5 22.5)"
                    />
                  </svg>
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "marginRight": 32,
                        },
                        Object {
                          "marginLeft": 32,
                          "marginVertical": 5,
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 28, 30, 0.68)",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "color": "#2E3338",
                              "fontFamily": "Inter-Regular",
                              "fontSize": 16,
                              "lineHeight": 22,
                            },
                            Object {
                              "fontWeight": "normal",
                              "marginLeft": -20,
                            },
                          ],
                        ]
                      }
                    >
                      settings
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              progress={0}
              style={
                Array [
                  Object {
                    "marginHorizontal": 10,
                    "marginVertical": 4,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 4,
                  },
                  undefined,
                ]
              }
              testID="DrawerItem/help"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "selected": false,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "padding": 8,
                      },
                      Object {
                        "borderRadius": 4,
                      },
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    testID="Help"
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <circle
                      cx={16}
                      cy={16}
                      r={11}
                      stroke="#B4B9BD"
                      strokeWidth={2}
                    />
                    <path
                      d="M15.753 19.546a.845.845 0 01-.836-.807c-.02-.482-.023-.962.123-1.415.17-.53.412-.959.726-1.287a5.91 5.91 0 011.13-.907c.395-.248.726-.574.995-.977.27-.403.404-.883.404-1.441 0-.46-.103-.858-.31-1.195a2.113 2.113 0 00-.827-.78 2.42 2.42 0 00-1.15-.275c-.367 0-.721.08-1.062.24-.341.159-.626.41-.854.752a2.136 2.136 0 00-.26.555c-.134.43-.488.787-.938.787-.487 0-.886-.41-.777-.885a3.616 3.616 0 011.908-2.461c.596-.3 1.257-.45 1.983-.45.79 0 1.476.164 2.058.492a3.44 3.44 0 011.359 1.35c.323.572.484 1.223.484 1.954 0 .778-.166 1.444-.498 1.997a4.205 4.205 0 01-1.385 1.392c-.395.258-.71.53-.948.816-.238.28-.41.616-.518 1.005-.066.24-.069.486-.053.734a.746.746 0 01-.754.806z"
                      fill="#B4B9BD"
                    />
                    <circle
                      cx={15.735}
                      cy={22.099}
                      fill="#B4B9BD"
                      r={1.098}
                    />
                  </svg>
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "marginRight": 32,
                        },
                        Object {
                          "marginLeft": 32,
                          "marginVertical": 5,
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 28, 30, 0.68)",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "color": "#2E3338",
                              "fontFamily": "Inter-Regular",
                              "fontSize": 16,
                              "lineHeight": 22,
                            },
                            Object {
                              "fontWeight": "normal",
                              "marginLeft": -20,
                            },
                          ],
                        ]
                      }
                    >
                      help
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 32,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-SemiBold",
                    "fontSize": 13,
                    "lineHeight": 16,
                  }
                }
              >
                dappkit:address
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
                testID="CopyAddressToClipboard"
              >
                <Text
                  style={
                    Object {
                      "color": "#9CA4A9",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 14,
                      "lineHeight": 18,
                      "marginVertical": 8,
                    }
                  }
                >
                  0x 0000 0000 0000 0000 0000 0000 0000 0000 0000 7e57
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#9CA4A9",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 13,
                      "lineHeight": 16,
                      "textDecorationLine": "underline",
                    }
                  }
                >
                  tapToCopy
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "marginTop": 32,
                  }
                }
              >
                Version appVersion
              </Text>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </RNCSafeAreaProvider>
</GestureHandlerRootView>
`;
