// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExchangeTradeScreen renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
      "top",
    ]
  }
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingLeft": 22,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          nativeBackgroundAndroid={
            Object {
              "attribute": "selectableItemBackgroundBorderless",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <svg
            height={16}
            style={Object {}}
            testID="BackChevron"
            viewBox="0 0 15 15"
            width={16}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M0.442803 7.08502C0.444561 7.33572 0.533359 7.58609 0.710547 7.78183C0.744524 7.81936 0.780571 7.85359 0.818325 7.88449L6.40331 13.4695C6.79383 13.86 7.41088 13.8447 7.78152 13.4352C8.15216 13.0258 8.13604 12.3773 7.74551 11.9867L2.83181 7.07304L7.74561 2.15923C8.13614 1.76871 8.15225 1.12021 7.78161 0.710762C7.41097 0.301318 6.79393 0.285981 6.4034 0.676505L0.819307 6.2606C0.78116 6.29173 0.744749 6.32625 0.710448 6.36414C0.527591 6.56614 0.438871 6.82633 0.442803 7.08502Z"
              fill="#2E3338"
              style={Object {}}
            />
          </svg>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "left": 60,
          "position": "absolute",
          "right": 60,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackground",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Jost-Medium",
                "fontSize": 16,
                "lineHeight": 20,
              }
            }
          >
            global:loading
          </Text>
          <Text
            style={
              Object {
                "color": "#9CA4A9",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
              testID="HeaderCurrencyPicker"
            >
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                  }
                }
              >
                exchangeFlow9:tokenBalance, {"token":"cUSD"}
              </Text>
              <svg
                fill="none"
                height={16}
                viewBox="0 0 16 16"
                width={16}
              >
                <path
                  d="M3 6l5 5 5-5"
                  stroke="#B4B9BD"
                />
              </svg>
            </View>
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingHorizontal": 16,
      }
    }
    keyboardShouldPersistTaps="always"
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 8,
            "marginTop": 38,
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Medium",
                "fontSize": 15,
                "fontWeight": "700",
                "lineHeight": 20,
              }
            }
          >
            exchangeAmount, {"tokenName":"global:gold"}
          </Text>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "opacity": 1,
                },
              ]
            }
            testID="ExchangeSwitchInput"
          >
            <Text
              style={
                Object {
                  "color": "#9CA4A9",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 13,
                  "lineHeight": 18,
                  "marginTop": 4,
                  "textDecorationLine": "underline",
                }
              }
            >
              switchTo, {"tokenName":"MXN"}
            </Text>
          </View>
        </View>
        <TextInput
          allowFontScaling={true}
          autoCapitalize="words"
          autoFocus={true}
          keyboardType="decimal-pad"
          onChangeText={[Function]}
          placeholder="0"
          placeholderTextColor="#B4B9BD"
          rejectResponderTermination={true}
          style={
            Object {
              "color": "#9C6E00",
              "flex": 1,
              "fontFamily": "Inter-Regular",
              "fontSize": 24,
              "height": 60,
              "lineHeight": 39,
              "marginLeft": 10,
              "textAlign": "right",
            }
          }
          testID="ExchangeInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "marginVertical": 5,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 5,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2E3338",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 16,
                  "lineHeight": 22,
                },
                Object {
                  "color": "#2E3338",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 14,
                  "lineHeight": 18,
                },
              ]
            }
          >
            Subtotal @
             
            <Text
              style={
                Array [
                  undefined,
                  Object {
                    "color": undefined,
                  },
                ]
              }
              testID="undefined/value"
            >
              
              $
              12.09
            </Text>
          </Text>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 14,
                "lineHeight": 18,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                undefined,
                Object {
                  "color": undefined,
                },
              ]
            }
            testID="undefined/value"
          >
            
            $
            0.00
          </Text>
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-between",
            "marginVertical": 5,
          },
          Object {
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginRight": 5,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              Object {
                "color": "#81868B",
                "fontFamily": "Inter-Regular",
                "fontSize": 14,
                "lineHeight": 18,
                "marginRight": 4,
              },
            ]
          }
        >
          exchangeRateInfo
        </Text>
        <svg
          fill="none"
          height={14}
          style={Object {}}
          viewBox="0 0 16 16"
          width={14}
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="#2E3338"
            stroke-width="1.25"
            style={Object {}}
          />
          <path
            d="M8 12V7M8 6V5"
            stroke="#2E3338"
            stroke-width="1.25"
            style={Object {}}
          />
        </svg>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "column",
        },
        Object {
          "padding": 16,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 100,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackground",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#F1F0EB",
            "flexGrow": 1,
            "height": 48,
            "justifyContent": "center",
            "opacity": undefined,
            "paddingHorizontal": 24,
            "paddingVertical": 5,
          }
        }
        testID="ExchangeReviewButton"
      >
        <Text
          accessibilityLabel="continue"
          maxFontSizeMultiplier={1}
          style={
            Object {
              "color": "#9CA4A9",
              "fontFamily": "Inter-SemiBold",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          global:review
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <RNCSafeAreaView>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "padding": 16,
              },
              Object {
                "borderRadius": 8,
              },
              Object {
                "elevation": 12,
                "shadowColor": "rgba(156, 164, 169, 0.4)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 12,
              },
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "maxHeight": "100%",
                  "padding": 24,
                },
                undefined,
              ],
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "alignItems": "center",
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Jost-Medium",
                    "fontSize": 22,
                    "lineHeight": 28,
                    "marginBottom": 12,
                    "textAlign": "center",
                  }
                }
              >
                rateInfoTitle
              </Text>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "marginBottom": 24,
                    "textAlign": "center",
                  }
                }
              >
                rateInfoBody
              </Text>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "space-around",
                "maxWidth": "100%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "rippleRadius": undefined,
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                global:dismiss
              </Text>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>
  <View
    collapsable={false}
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        Object {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</RNCSafeAreaView>
`;
