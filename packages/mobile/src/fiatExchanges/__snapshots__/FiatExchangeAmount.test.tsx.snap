// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FiatExchangeAmount cashIn renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
    ]
  }
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <RNCSafeAreaView>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "padding": 16,
              },
              Object {
                "borderRadius": 8,
              },
              Object {
                "elevation": 12,
                "shadowColor": "rgba(156, 164, 169, 0.4)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 12,
              },
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "maxHeight": "100%",
                  "padding": 24,
                },
                undefined,
              ],
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "alignItems": "center",
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "marginBottom": 24,
                    "textAlign": "center",
                  }
                }
              >
                invalidAmountDialog.minAmount
              </Text>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "space-around",
                "maxWidth": "100%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "rippleRadius": undefined,
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="invalidAmountDialog/PrimaryAction"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                invalidAmountDialog.dismiss
              </Text>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <RNCSafeAreaView>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "padding": 16,
              },
              Object {
                "borderRadius": 8,
              },
              Object {
                "elevation": 12,
                "shadowColor": "rgba(156, 164, 169, 0.4)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 12,
              },
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "maxHeight": "100%",
                  "padding": 24,
                },
                undefined,
              ],
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "alignItems": "center",
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "marginBottom": 24,
                    "textAlign": "center",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#1AB775",
                    }
                  }
                />
              </Text>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "space-around",
                "maxWidth": "100%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "rippleRadius": undefined,
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="DailyLimitDialog/SecondaryAction"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "color": "#9CA4A9",
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                dailyLimitDialog.contact
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "rippleRadius": undefined,
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="DailyLimitDialog/PrimaryAction"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                dailyLimitDialog.continue
              </Text>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingHorizontal": 16,
      }
    }
    keyboardShouldPersistTaps="always"
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 8,
            "marginTop": 24,
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Medium",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            global:amount 
          </Text>
        </View>
        <TextInput
          allowFontScaling={true}
          autoFocus={true}
          keyboardType="decimal-pad"
          onChangeText={[Function]}
          placeholder="$0"
          placeholderTextColor="#B4B9BD"
          rejectResponderTermination={true}
          style={
            Array [
              Object {
                "color": "#2E3338",
                "flex": 1,
                "fontFamily": "Inter-Regular",
                "fontSize": 19,
                "height": 48,
                "lineHeight": 27,
                "marginLeft": 10,
                "textAlign": "right",
              },
              Object {
                "color": "#1AB775",
              },
            ]
          }
          testID="FiatExchangeInput"
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 5,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 5,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2E3338",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 16,
                  "lineHeight": 22,
                },
                Object {
                  "color": "#2E3338",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 14,
                  "lineHeight": 18,
                },
              ]
            }
          >
            celoDollar @ 
            <Text
              style={
                Array [
                  undefined,
                  Object {
                    "color": undefined,
                  },
                ]
              }
              testID="undefined/value"
            >
              
              $
              1.00
            </Text>
          </Text>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 14,
                "lineHeight": 18,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                undefined,
                Object {
                  "color": undefined,
                },
              ]
            }
            testID="undefined/value"
          >
            
            0.00
          </Text>
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <Text
    style={
      Object {
        "color": "#9CA4A9",
        "fontFamily": "Inter-Regular",
        "fontSize": 14,
        "lineHeight": 18,
        "textAlign": "center",
      }
    }
  >
    disclaimerFiat
  </Text>
  <View
    style={
      Array [
        Object {
          "flexDirection": "column",
        },
        Object {
          "padding": 16,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 100,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackground",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#97DFC1",
            "flexGrow": 1,
            "height": 48,
            "justifyContent": "center",
            "opacity": undefined,
            "paddingHorizontal": 24,
            "paddingVertical": 5,
          }
        }
        testID="FiatExchangeNextButton"
      >
        <Text
          accessibilityLabel="global:next"
          style={
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Inter-SemiBold",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          global:next
        </Text>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        Object {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</RNCSafeAreaView>
`;
