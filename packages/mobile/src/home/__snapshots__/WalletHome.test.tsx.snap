// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WalletHome Renders correctly and fires initial actions 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "position": "relative",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomColor": 0,
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "flexShrink": 1,
        "justifyContent": "center",
        "minHeight": 56,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "left": 0,
            "marginBottom": 0,
            "marginLeft": 16,
            "padding": 0,
            "position": "absolute",
          },
          Object {
            "opacity": 1,
          },
        ]
      }
    >
      <svg
        fill="none"
        height="32"
        testID="Hamburger"
        viewBox="0 0 32 32"
        width="32"
      >
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="9.75"
          y2="9.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="15.75"
          y2="15.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="21.75"
          y2="21.75"
        />
      </svg>
    </View>
    <svg
      fill="none"
      height={25}
      style={Object {}}
      viewBox="0 0 25 25"
      width={25}
    >
      <path
        d="M9.86842 22.3684C13.8653 22.3684 17.1053 19.1284 17.1053 15.1316C17.1053 11.1348 13.8653 7.89476 9.86842 7.89476C5.87158 7.89476 2.63158 11.1348 2.63158 15.1316C2.63158 19.1284 5.87158 22.3684 9.86842 22.3684ZM9.86842 25C4.41842 25 0 20.5816 0 15.1316C0 9.6816 4.41842 5.26318 9.86842 5.26318C15.3184 5.26318 19.7368 9.6816 19.7368 15.1316C19.7368 20.5816 15.3184 25 9.86842 25Z"
        fill="#FBCC5C"
        style={Object {}}
      />
      <path
        d="M15.1316 17.1053C19.1284 17.1053 22.3684 13.8653 22.3684 9.86842C22.3684 5.87158 19.1284 2.63158 15.1316 2.63158C11.1348 2.63158 7.89476 5.87158 7.89476 9.86842C7.89476 13.8653 11.1348 17.1053 15.1316 17.1053ZM15.1316 19.7368C9.6816 19.7368 5.26318 15.3184 5.26318 9.86842C5.26318 4.41842 9.6816 0 15.1316 0C20.5816 0 25 4.41842 25 9.86842C25 15.3184 20.5816 19.7368 15.1316 19.7368Z"
        fill="#42D689"
        style={Object {}}
      />
      <path
        d="M15.4577 19.7369C16.1419 18.9077 16.6324 17.9361 16.8932 16.8932C17.9361 16.6324 18.9077 16.1421 19.7369 15.4579C19.699 16.6658 19.439 17.8563 18.9695 18.9698C17.8561 19.439 16.6656 19.6992 15.4577 19.7369ZM8.10687 8.10687C7.06397 8.36766 6.09239 8.85792 5.26318 9.54213C5.30108 8.33424 5.56108 7.14371 6.03055 6.03029C7.14397 5.56108 8.3345 5.30082 9.54239 5.26318C8.85818 6.09239 8.36766 7.06397 8.10687 8.10687Z"
        fill="#5EA33B"
        style={Object {}}
      />
    </svg>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "data": Array [
            Object {},
          ],
          "renderItem": [Function],
        },
        Object {
          "data": Array [
            Object {},
          ],
          "renderItem": [Function],
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        colors={
          Array [
            "#1AB775",
          ]
        }
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderItem={[Function]}
    scrollEventThrottle={16}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "position": "relative",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "maxWidth": 750,
              "width": 750,
            }
          }
        >
          <RCTScrollView
            horizontal={true}
            onScroll={[Function]}
            pagingEnabled={true}
            showsHorizontalScrollIndicator={false}
            testID="CTA/ScrollContainer"
          >
            <View>
              <View
                style={
                  Object {
                    "margin": 16,
                    "marginBottom": 24,
                    "width": 718,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "padding": 16,
                      },
                      Object {
                        "borderRadius": 8,
                      },
                      Object {
                        "elevation": 12,
                        "shadowColor": "rgba(156, 164, 169, 0.4)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 12,
                      },
                      Array [
                        Object {
                          "flex": 1,
                          "minHeight": 144,
                        },
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#2E3338",
                            "fontFamily": "Inter-Regular",
                            "fontSize": 18,
                            "lineHeight": 24,
                          }
                        }
                        testID="undefined/Text"
                      >
                        backupKeyNotification
                      </Text>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "flexWrap": "wrap",
                            "justifyContent": "flex-start",
                          }
                        }
                        testID="undefined/CallToActions"
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          nativeBackgroundAndroid={
                            Object {
                              "attribute": "selectableItemBackgroundBorderless",
                              "rippleRadius": undefined,
                              "type": "ThemeAttrAndroid",
                            }
                          }
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          testID="undefined/CallToActions/introPrimaryAction/Button"
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#1AB775",
                                  "fontFamily": "Inter-SemiBold",
                                  "fontSize": 16,
                                  "lineHeight": 22,
                                },
                                Object {
                                  "fontSize": 14,
                                  "lineHeight": 16,
                                  "marginRight": 24,
                                  "minHeight": 16,
                                  "minWidth": 48,
                                },
                              ]
                            }
                          >
                            introPrimaryAction
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 12,
                          "width": 80,
                        }
                      }
                    >
                      <Image
                        resizeMode="contain"
                        source={
                          Object {
                            "testUri": "../../../packages/mobile/src/images/backup-key.png",
                          }
                        }
                        style={
                          Object {
                            "height": "100%",
                            "width": "100%",
                          }
                        }
                        testID="undefined/Icon"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "margin": 16,
                    "marginBottom": 24,
                    "width": 718,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "padding": 16,
                      },
                      Object {
                        "borderRadius": 8,
                      },
                      Object {
                        "elevation": 12,
                        "shadowColor": "rgba(156, 164, 169, 0.4)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 12,
                      },
                      Array [
                        Object {
                          "flex": 1,
                          "minHeight": 144,
                        },
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#2E3338",
                            "fontFamily": "Inter-Regular",
                            "fontSize": 18,
                            "lineHeight": 24,
                          }
                        }
                        testID="undefined/Text"
                      >
                        whatIsGold
                      </Text>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "flexWrap": "wrap",
                            "justifyContent": "flex-start",
                          }
                        }
                        testID="undefined/CallToActions"
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          nativeBackgroundAndroid={
                            Object {
                              "attribute": "selectableItemBackgroundBorderless",
                              "rippleRadius": undefined,
                              "type": "ThemeAttrAndroid",
                            }
                          }
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          testID="undefined/CallToActions/learnMore/Button"
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#1AB775",
                                  "fontFamily": "Inter-SemiBold",
                                  "fontSize": 16,
                                  "lineHeight": 22,
                                },
                                Object {
                                  "fontSize": 14,
                                  "lineHeight": 16,
                                  "marginRight": 24,
                                  "minHeight": 16,
                                  "minWidth": 48,
                                },
                              ]
                            }
                          >
                            learnMore
                          </Text>
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          nativeBackgroundAndroid={
                            Object {
                              "attribute": "selectableItemBackgroundBorderless",
                              "rippleRadius": undefined,
                              "type": "ThemeAttrAndroid",
                            }
                          }
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          testID="undefined/CallToActions/dismiss/Button"
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#1AB775",
                                  "fontFamily": "Inter-SemiBold",
                                  "fontSize": 16,
                                  "lineHeight": 22,
                                },
                                Object {
                                  "color": "#9CA4A9",
                                  "fontSize": 14,
                                  "lineHeight": 16,
                                  "marginRight": 24,
                                  "minHeight": 16,
                                  "minWidth": 48,
                                },
                              ]
                            }
                          >
                            dismiss
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginLeft": 12,
                          "width": 80,
                        }
                      }
                    >
                      <Image
                        resizeMode="contain"
                        source={
                          Object {
                            "testUri": "../../../packages/mobile/src/images/learn-celo.png",
                          }
                        }
                        style={
                          Object {
                            "height": "100%",
                            "width": "100%",
                          }
                        }
                        testID="undefined/Icon"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "paddingBottom": 16,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#2E3338",
                  "borderRadius": 5,
                  "flex": 0,
                  "height": 5,
                  "marginHorizontal": 3,
                  "width": 5,
                }
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "#9CA4A9",
                  "borderRadius": 5,
                  "flex": 0,
                  "height": 5,
                  "marginHorizontal": 3,
                  "width": 5,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <TransactionsList
          feedType="home"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderTopColor": "#EDEEEF",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      }
    }
    testID="SendOrRequestBar"
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          Object {
            "flex": 1,
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 100,
            },
          ]
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            Object {
              "attribute": "selectableItemBackground",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#1AB775",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 120,
              "opacity": undefined,
              "paddingHorizontal": 24,
              "paddingVertical": 5,
            }
          }
          testID="SendOrRequestBar/SendButton"
        >
          <Text
            maxFontSizeMultiplier={1}
            style={
              Object {
                "color": "#FFFFFF",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            send
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          Array [
            Object {
              "flex": 1,
              "flexDirection": "column",
            },
            Object {
              "marginHorizontal": 12,
            },
          ],
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 100,
            },
          ]
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            Object {
              "attribute": "selectableItemBackground",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#1AB775",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 120,
              "opacity": undefined,
              "paddingHorizontal": 24,
              "paddingVertical": 5,
            }
          }
          testID="SendOrRequestBar/RequestButton"
        >
          <Text
            maxFontSizeMultiplier={1}
            style={
              Object {
                "color": "#FFFFFF",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            request
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      nativeBackgroundAndroid={
        Object {
          "attribute": "selectableItemBackgroundBorderless",
          "rippleRadius": undefined,
          "type": "ThemeAttrAndroid",
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <svg
        fill="none"
        height={32}
        style={Object {}}
        viewBox="0 0 32 32"
        width={32}
      >
        <rect
          height={10}
          rx={3}
          stroke="#1AB775"
          strokeWidth={2.75}
          style={Object {}}
          width={10}
          x={4}
          y={4}
        />
        <rect
          height={10}
          rx={3}
          stroke="#1AB775"
          strokeWidth={2.75}
          style={Object {}}
          width={10}
          x={18}
          y={4}
        />
        <path
          d="M18 25v1a2 2 0 002 2h1M28 21v-1a2 2 0 00-2-2h-1M21 18h-1a2 2 0 00-2 2v1M25 28h1a2 2 0 002-2v-1"
          stroke="#1AB775"
          strokeLinecap="round"
          strokeWidth={2.75}
          style={Object {}}
        />
        <rect
          height={10}
          rx={3}
          stroke="#1AB775"
          strokeWidth={2.75}
          style={Object {}}
          width={10}
          x={4}
          y={18}
        />
      </svg>
    </View>
  </View>
</RNCSafeAreaView>
`;
