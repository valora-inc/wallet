// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CashInBottomSheet renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onSwipeComplete={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "left": 0,
        "margin": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderTopLeftRadius": 20,
          "borderTopRightRadius": 20,
          "paddingTop": 12,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "transparent",
            "marginRight": 26,
            "marginVertical": 26,
          }
        }
      >
        <svg
          height={16}
          style={Object {}}
          testID="Times"
          viewBox="0 0 16 16"
          width={16}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M13.9999 2.00146L1.99994 14.0015"
            stroke="#2E3338"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            style={Object {}}
          />
          <path
            d="M1.99994 2.00146L13.9999 14.0015"
            stroke="#2E3338"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            style={Object {}}
          />
        </svg>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Jost-Medium",
              "fontSize": 22,
              "lineHeight": 28,
              "marginBottom": 16,
              "paddingHorizontal": 36,
              "textAlign": "center",
            }
          }
        >
          cashInBottomSheet.title
        </Text>
        <Text
          style={
            Object {
              "color": "#81868B",
              "fontFamily": "Inter-Regular",
              "fontSize": 16,
              "lineHeight": 22,
              "paddingHorizontal": 36,
              "textAlign": "center",
            }
          }
        >
          cashInBottomSheet.subtitle
        </Text>
        <View
          style={
            Array [
              Object {
                "flexDirection": "column",
              },
              Object {
                "marginHorizontal": 16,
                "marginVertical": 28,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 100,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackground",
                  "rippleRadius": undefined,
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#1AB775",
                  "flexGrow": 1,
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": undefined,
                  "paddingHorizontal": 24,
                  "paddingVertical": 5,
                }
              }
              testID="cashInBtn"
            >
              <Text
                maxFontSizeMultiplier={1}
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "Inter-SemiBold",
                    "fontSize": 16,
                    "lineHeight": 22,
                  }
                }
              >
                cashInBottomSheet.addFunds
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
