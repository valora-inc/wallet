// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Send renders correctly with invite rewards disabled 1`] = `
<RNCSafeAreaView
  edges={
    [
      "top",
    ]
  }
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "space-between",
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          {
            "color": "#2E3338",
            "fontFamily": "Jost-Medium",
            "fontSize": 16,
            "lineHeight": 20,
            "maxWidth": 450,
          }
        }
      >
        send
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "padding": 16,
          }
        }
      >
        <svg
          height={16}
          style={{}}
          testID="Times"
          viewBox="0 0 16 16"
          width={16}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M13.9999 2.00146L1.99994 14.0015"
            stroke="#2E3338"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            style={{}}
          />
          <path
            d="M1.99994 2.00146L13.9999 14.0015"
            stroke="#2E3338"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            style={{}}
          />
        </svg>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "padding": 16,
          }
        }
      >
        <svg
          fill="none"
          height={32}
          style={{}}
          viewBox="0 0 32 32"
          width={32}
        >
          <rect
            height={10}
            rx={3}
            stroke="#1AB775"
            strokeWidth={2.75}
            style={{}}
            width={10}
            x={4}
            y={4}
          />
          <rect
            height={10}
            rx={3}
            stroke="#1AB775"
            strokeWidth={2.75}
            style={{}}
            width={10}
            x={18}
            y={4}
          />
          <path
            d="M18 25v1a2 2 0 002 2h1M28 21v-1a2 2 0 00-2-2h-1M21 18h-1a2 2 0 00-2 2v1M25 28h1a2 2 0 002-2v-1"
            stroke="#1AB775"
            strokeLinecap="round"
            strokeWidth={2.75}
            style={{}}
          />
          <rect
            height={10}
            rx={3}
            stroke="#1AB775"
            strokeWidth={2.75}
            style={{}}
            width={10}
            x={4}
            y={18}
          />
        </svg>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "paddingBottom": 12,
        "paddingHorizontal": 16,
        "paddingTop": 16,
      }
    }
    testID="SendSearchInput"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#E6E6E6",
            "borderRadius": 18,
            "borderWidth": 1.5,
            "flexDirection": "row",
            "minHeight": 36,
            "paddingRight": 8,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          {
            "marginLeft": 17,
            "marginRight": 13,
          }
        }
      >
        <Text
          style={
            {
              "color": "#505050",
            }
          }
        >
          to
        </Text>
      </View>
      <View
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <TextInput
          isPasteIconVisible={false}
          leftIcon={
            <Text
              style={
                {
                  "color": "#505050",
                }
              }
            >
              to
            </Text>
          }
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onPressPaste={[Function]}
          placeholder="namePhoneAddress"
          shouldShowClipboard={[Function]}
          style={
            [
              {
                "color": "#2E3338",
                "flex": 1,
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
                "paddingHorizontal": 0,
                "paddingVertical": 12,
              },
              undefined,
              {
                "paddingVertical": 6,
              },
            ]
          }
          testID="SearchInput"
          value=""
        />
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flex": 1,
      }
    }
    testID="RecipientPicker"
  >
    <Modal
      animationType="none"
      deviceHeight={1334}
      deviceWidth={null}
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      panResponderThreshold={4}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      supportedOrientations={
        [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    />
    <RCTScrollView
      ListEmptyComponent={
        <View
          style={
            {
              "justifyContent": "center",
              "paddingHorizontal": 24,
            }
          }
        >
          <View
            style={
              {
                "justifyContent": "center",
                "paddingVertical": 24,
                "textAlign": "center",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#757575",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 18,
                  "lineHeight": 24,
                  "textAlign": "center",
                }
              }
            >
              noContacts
            </Text>
          </View>
        </View>
      }
      ListHeaderComponent={[Function]}
      contentContainerStyle={null}
      data={
        [
          {
            "data": [
              {
                "address": "0x0000000000000000000000000000000000007E57",
                "addressPrepared": {
                  "_bitflags": 75497488,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "0x0000000000000000000000000000000000007e57",
                  "_targetLowerCodes": [
                    48,
                    120,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    48,
                    55,
                    101,
                    53,
                    55,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "0x0000000000000000000000000000000000007E57",
                },
                "contactId": "contactId",
                "displayNumber": "14155550000",
                "displayPrepared": {
                  "_bitflags": 25240,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "john doe",
                  "_targetLowerCodes": [
                    106,
                    111,
                    104,
                    110,
                    32,
                    100,
                    111,
                    101,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "John Doe",
                },
                "e164PhoneNumber": "+14155550000",
                "name": "John Doe",
                "phonePrepared": {
                  "_bitflags": 1140850688,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "+14155550000",
                  "_targetLowerCodes": [
                    43,
                    49,
                    52,
                    49,
                    53,
                    53,
                    53,
                    53,
                    48,
                    48,
                    48,
                    48,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "+14155550000",
                },
                "recipientType": "Address",
              },
            ],
            "key": "recent",
          },
          {
            "data": [
              {
                "address": "0x9335BaFcE54cAa0D6690d1D4DA6406568b52488F",
                "addressPrepared": {
                  "_bitflags": 75497535,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "0x9335bafce54caa0d6690d1d4da6406568b52488f",
                  "_targetLowerCodes": [
                    48,
                    120,
                    57,
                    51,
                    51,
                    53,
                    98,
                    97,
                    102,
                    99,
                    101,
                    53,
                    52,
                    99,
                    97,
                    97,
                    48,
                    100,
                    54,
                    54,
                    57,
                    48,
                    100,
                    49,
                    100,
                    52,
                    100,
                    97,
                    54,
                    52,
                    48,
                    54,
                    53,
                    54,
                    56,
                    98,
                    53,
                    50,
                    52,
                    56,
                    56,
                    102,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "0x9335BaFcE54cAa0D6690d1D4DA6406568b52488F",
                },
                "contactId": "contactId",
                "displayNumber": "13105550000",
                "displayPrepared": {
                  "_bitflags": 25113,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "jane doe",
                  "_targetLowerCodes": [
                    106,
                    97,
                    110,
                    101,
                    32,
                    100,
                    111,
                    101,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "Jane Doe",
                },
                "e164PhoneNumber": "+13105550000",
                "name": "Jane Doe",
                "phonePrepared": {
                  "_bitflags": 1140850688,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "+13105550000",
                  "_targetLowerCodes": [
                    43,
                    49,
                    51,
                    49,
                    48,
                    53,
                    53,
                    53,
                    48,
                    48,
                    48,
                    48,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "+13105550000",
                },
                "recipientType": "Address",
              },
              {
                "addressPrepared": undefined,
                "contactId": "contactId4",
                "displayPrepared": {
                  "_bitflags": 33710099,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "zebra zone",
                  "_targetLowerCodes": [
                    122,
                    101,
                    98,
                    114,
                    97,
                    32,
                    122,
                    111,
                    110,
                    101,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "Zebra Zone",
                },
                "e164PhoneNumber": "+14163957395",
                "name": "Zebra Zone",
                "phonePrepared": {
                  "_bitflags": 1140850688,
                  "_indexes": [
                    0,
                  ],
                  "_nextBeginningIndexes": null,
                  "_targetLower": "+14163957395",
                  "_targetLowerCodes": [
                    43,
                    49,
                    52,
                    49,
                    54,
                    51,
                    57,
                    53,
                    55,
                    51,
                    57,
                    53,
                  ],
                  "obj": null,
                  "score": null,
                  "target": "+14163957395",
                },
                "recipientType": "PhoneNumber",
              },
            ],
            "key": "contacts",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      initialNumToRender={30}
      keyExtractor={[Function]}
      keyboardShouldPersistTaps="always"
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
    >
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingHorizontal": 16,
                  "paddingVertical": 8,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                {
                  "color": "#666666",
                  "fontFamily": "Inter-Medium",
                  "fontSize": 13,
                  "lineHeight": 16,
                }
              }
            >
              recent
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              {
                "attribute": "selectableItemBackground",
                "rippleRadius": undefined,
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="RecipientItem"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingHorizontal": 16,
                  "paddingVertical": 12,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    {
                      "marginRight": 12,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "hsl(0, 53%, 93%)",
                        "borderRadius": 20,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Inter-Medium",
                          "fontSize": 16,
                        },
                        {
                          "color": "hsl(0, 67%, 24%)",
                          "fontSize": 20,
                        },
                      ]
                    }
                  >
                    J
                  </Text>
                </View>
              </View>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Medium",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  John Doe
                </Text>
                <Text
                  style={
                    {
                      "color": "#666666",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 14,
                      "lineHeight": 18,
                    }
                  }
                >
                  14155550000
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "shadowColor": "rgba(46, 51, 56, 0.15)",
                        "shadowOffset": {
                          "height": 0,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 2,
                      },
                      undefined,
                    ]
                  }
                >
                  <svg
                    fill="none"
                    height={32}
                    viewBox="0 0 32 32"
                    width={32}
                  >
                    <g>
                      <path
                        d="M18.39 26.77c1.072-8.36 5.002-13.12 10.943-17.434l-3.037-4.003c-3.886 2.98-8.13 7.205-10.095 13.032-1.608-4.76-4.958-8.94-10.363-13.032L2.667 9.425C9.41 14.228 12.807 19.61 13.744 26.77h4.646z"
                        fill="#42D689"
                      />
                    </g>
                    <defs>
                      <linearGradient
                        gradientUnits="userSpaceOnUse"
                        id="prefix__paint0_linear"
                        x1={34.337}
                        x2={28.937}
                        y1={10.054}
                        y2={30.49}
                      >
                        <stop
                          offset={0.118}
                          stopColor="#35D07F"
                        />
                        <stop
                          offset={0.802}
                          stopColor="#FBCC5C"
                        />
                      </linearGradient>
                    </defs>
                  </svg>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        />
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingHorizontal": 16,
                  "paddingVertical": 8,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                {
                  "color": "#666666",
                  "fontFamily": "Inter-Medium",
                  "fontSize": 13,
                  "lineHeight": 16,
                }
              }
            >
              contacts
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                {
                  "attribute": "selectableItemBackground",
                  "rippleRadius": undefined,
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="RecipientItem"
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingHorizontal": 16,
                    "paddingVertical": 12,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      {
                        "marginRight": 12,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "backgroundColor": "hsl(195, 53%, 93%)",
                          "borderRadius": 20,
                          "height": 40,
                          "width": 40,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Inter-Medium",
                            "fontSize": 16,
                          },
                          {
                            "color": "hsl(195, 67%, 24%)",
                            "fontSize": 20,
                          },
                        ]
                      }
                    >
                      J
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Medium",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    Jane Doe
                  </Text>
                  <Text
                    style={
                      {
                        "color": "#666666",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      }
                    }
                  >
                    13105550000
                  </Text>
                </View>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "shadowColor": "rgba(46, 51, 56, 0.15)",
                          "shadowOffset": {
                            "height": 0,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 2,
                        },
                        undefined,
                      ]
                    }
                  >
                    <svg
                      fill="none"
                      height={32}
                      viewBox="0 0 32 32"
                      width={32}
                    >
                      <g>
                        <path
                          d="M18.39 26.77c1.072-8.36 5.002-13.12 10.943-17.434l-3.037-4.003c-3.886 2.98-8.13 7.205-10.095 13.032-1.608-4.76-4.958-8.94-10.363-13.032L2.667 9.425C9.41 14.228 12.807 19.61 13.744 26.77h4.646z"
                          fill="#42D689"
                        />
                      </g>
                      <defs>
                        <linearGradient
                          gradientUnits="userSpaceOnUse"
                          id="prefix__paint0_linear"
                          x1={34.337}
                          x2={28.937}
                          y1={10.054}
                          y2={30.49}
                        >
                          <stop
                            offset={0.118}
                            stopColor="#35D07F"
                          />
                          <stop
                            offset={0.802}
                            stopColor="#FBCC5C"
                          />
                        </linearGradient>
                      </defs>
                    </svg>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={{}}
            />
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              {
                "attribute": "selectableItemBackground",
                "rippleRadius": undefined,
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="RecipientItem"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingHorizontal": 16,
                  "paddingVertical": 12,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    {
                      "marginRight": 12,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "hsl(0, 53%, 93%)",
                        "borderRadius": 20,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Inter-Medium",
                          "fontSize": 16,
                        },
                        {
                          "color": "hsl(0, 67%, 24%)",
                          "fontSize": 20,
                        },
                      ]
                    }
                  >
                    Z
                  </Text>
                </View>
              </View>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Medium",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  Zebra Zone
                </Text>
                <Text
                  style={
                    {
                      "color": "#666666",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 14,
                      "lineHeight": 18,
                    }
                  }
                >
                  +14163957395
                </Text>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
    <View
      collapsable={false}
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "right": 0,
          },
          {
            "height": 0,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    accessibilityHint="Tap to close the Bottom Sheet"
    accessibilityLabel="Bottom Sheet backdrop"
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    handlerTag={1}
    handlerType="TapGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      [
        {
          "backgroundColor": "black",
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
      ]
    }
  />
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      [
        undefined,
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "bottom": 0,
          "overflow": "hidden",
          "top": 0,
        },
      ]
    }
  >
    <View
      style={
        [
          undefined,
          {
            "flexDirection": "column-reverse",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    >
      <View
        accessibilityLabel="Bottom Sheet"
        accessibilityRole="adjustable"
        accessible={true}
        pointerEvents="none"
        style={
          [
            {
              "backgroundColor": "white",
              "borderRadius": 15,
            },
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <View
          collapsable={false}
          handlerTag={2}
          handlerType="PanGestureHandler"
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          style={
            [
              {},
              undefined,
            ]
          }
        >
          <RCTScrollView
            onLayout={[Function]}
            scrollEnabled={false}
          >
            <View>
              <View
                onLayout={[Function]}
                style={
                  [
                    {
                      "padding": 24,
                    },
                    {
                      "paddingBottom": 24,
                    },
                    undefined,
                  ]
                }
                testID="TokenBottomSheet"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                      },
                      {
                        "paddingBottom": 12,
                      },
                    ]
                  }
                >
                  selectToken
                </Text>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    {
                      "attribute": "selectableItemBackground",
                      "rippleRadius": undefined,
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  testID="cUSDTouchable"
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <Image
                      source={
                        {
                          "uri": "https://raw.githubusercontent.com/ubeswap/default-token-list/master/assets/asset_cUSD.png",
                        }
                      }
                      style={
                        {
                          "borderRadius": 20,
                          "height": 40,
                          "marginRight": 12,
                          "width": 40,
                        }
                      }
                    />
                    <View
                      style={
                        {
                          "alignItems": "flex-start",
                          "flex": 3,
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#2E3338",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 16,
                            "lineHeight": 22,
                          }
                        }
                      >
                        cUSD
                      </Text>
                      <Text
                        style={
                          {
                            "color": "#666666",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 14,
                            "lineHeight": 18,
                          }
                        }
                      >
                        Celo Dollar
                      </Text>
                    </View>
                    <View
                      style={
                        {
                          "alignItems": "flex-end",
                          "flex": 2,
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#2E3338",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 16,
                            "lineHeight": 22,
                          }
                        }
                        testID="LocalcUSDBalance"
                      >
                        ₱
                        13.31
                      </Text>
                      <Text
                        style={
                          {
                            "color": "#666666",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 14,
                            "lineHeight": 18,
                          }
                        }
                        testID="cUSDBalance"
                      >
                        10.00
                         cUSD
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    {
                      "backgroundColor": "#E6E6E6",
                      "height": 1,
                      "width": "100%",
                    }
                  }
                />
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    {
                      "attribute": "selectableItemBackground",
                      "rippleRadius": undefined,
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  testID="CELOTouchable"
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <Image
                      source={
                        {
                          "uri": "https://raw.githubusercontent.com/valora-inc/address-metadata/main/assets/tokens/CELO.png",
                        }
                      }
                      style={
                        {
                          "borderRadius": 20,
                          "height": 40,
                          "marginRight": 12,
                          "width": 40,
                        }
                      }
                    />
                    <View
                      style={
                        {
                          "alignItems": "flex-start",
                          "flex": 3,
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#2E3338",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 16,
                            "lineHeight": 22,
                          }
                        }
                      >
                        CELO
                      </Text>
                      <Text
                        style={
                          {
                            "color": "#666666",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 14,
                            "lineHeight": 18,
                          }
                        }
                      >
                        Celo native asset
                      </Text>
                    </View>
                    <View
                      style={
                        {
                          "alignItems": "flex-end",
                          "flex": 2,
                          "flexShrink": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          {
                            "color": "#2E3338",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 16,
                            "lineHeight": 22,
                          }
                        }
                        testID="LocalCELOBalance"
                      >
                        ₱
                        352.47
                      </Text>
                      <Text
                        style={
                          {
                            "color": "#666666",
                            "flexShrink": 1,
                            "fontFamily": "Inter-Regular",
                            "fontSize": 14,
                            "lineHeight": 18,
                          }
                        }
                        testID="CELOBalance"
                      >
                        20.00
                         CELO
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        accessibilityHint="Drag up or down to extend or minimize the Bottom Sheet"
        accessibilityLabel="Bottom Sheet handle"
        accessibilityRole="adjustable"
        accessible={true}
        collapsable={false}
        handlerTag={3}
        handlerType="PanGestureHandler"
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
      >
        <View
          style={
            [
              {
                "padding": 10,
              },
              [
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.75)",
                  "borderRadius": 4,
                  "height": 4,
                  "width": 56.25,
                },
                [
                  {
                    "backgroundColor": "#DFDBCE",
                    "width": 40,
                  },
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
