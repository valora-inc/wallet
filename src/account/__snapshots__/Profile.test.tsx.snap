// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "off",
      "right": "off",
      "top": "off",
    }
  }
  style={
    {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    keyboardShouldPersistTaps="handled"
    testID="ProfileScrollView"
  >
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "column",
            "paddingBottom": 37,
            "paddingLeft": 10,
            "paddingRight": 15,
            "paddingTop": 24,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            {
              "attribute": "selectableItemBackground",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "alignSelf": "center",
                "borderRadius": 24,
                "height": 48,
                "justifyContent": "center",
                "width": 48,
              },
            ]
          }
          testID="PictureInput"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  },
                  {
                    "backgroundColor": "#F8F9F9",
                    "borderRadius": 24,
                    "height": 48,
                    "width": 48,
                  },
                  {
                    "borderColor": "#E6E6E6",
                    "borderWidth": 1,
                  },
                ]
              }
            >
              <svg
                fill="none"
                height="40"
                viewBox="0 0 40 40"
                width="40"
              >
                <circle
                  cx="20"
                  cy="20"
                  fill="#F8F9F9"
                  r="20"
                />
                <path
                  d="M20 12a4 4 0 1 1 0 8 4 4 0 0 1 0-8Zm0 2a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm0 7c2.67 0 8 1.33 8 4v3H12v-3c0-2.67 5.33-4 8-4Zm0 1.9c-2.97 0-6.1 1.46-6.1 2.1v1.1h12.2V25c0-.64-3.13-2.1-6.1-2.1Z"
                  fill="#2E3338"
                />
              </svg>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#2E3338",
                "borderRadius": 20,
                "bottom": -5,
                "height": 24,
                "justifyContent": "center",
                "left": 30,
                "position": "absolute",
                "width": 24,
              }
            }
          >
            <svg
              fill="none"
              height={12}
              viewBox="0 0 24 24"
              width={12}
            >
              <path
                d="M20 4h-3.17L15 2H9L7.17 4H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 14H4V6h4.05l1.83-2h4.24l1.83 2H20v12ZM12 7a5 5 0 1 0 0 10 5 5 0 0 0 0-10Zm0 8a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z"
                fill="#FFFFFF"
              />
            </svg>
          </View>
        </View>
        <Modal
          animationType="none"
          deviceHeight={1334}
          deviceWidth={null}
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onBackdropPress={[Function]}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          panResponderThreshold={4}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          supportedOrientations={
            [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          {
            "fontFamily": "Inter-SemiBold",
            "fontSize": 14,
            "lineHeight": 20,
            "paddingBottom": 8,
            "paddingLeft": 24,
          }
        }
      >
        profileName
      </Text>
      <View
        style={
          {
            "borderColor": "#E6E6E6",
            "borderRadius": 8,
            "borderWidth": 1,
            "height": 48,
            "marginHorizontal": 24,
            "paddingHorizontal": 12,
          }
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "gap": 8,
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <TextInput
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="profileScreen.namePlaceholder, {}"
            placeholderTextColor="#757575"
            style={
              [
                {
                  "color": "#2E3338",
                  "flex": 1,
                  "fontFamily": "Inter-Regular",
                  "fontSize": 16,
                  "lineHeight": 22,
                  "paddingHorizontal": 0,
                  "paddingVertical": 12,
                },
                undefined,
                undefined,
              ]
            }
            testID="ProfileEditName"
            value="John Doe"
          />
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            {
              "attribute": "selectableItemBackgroundBorderless",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="GenerateNameButton"
        >
          <Text
            style={
              [
                {
                  "color": "#1AB775",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 16,
                  "lineHeight": 24,
                },
                {
                  "color": "#2E3338",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 14,
                  "lineHeight": 20,
                  "marginTop": 24,
                },
              ]
            }
          >
            profileScreen.generateName
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "flex": 1,
        "flexDirection": "column",
        "flexGrow": 1,
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        {
          "margin": 24,
        }
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 16,
              "padding": 16,
            },
            {
              "backgroundColor": "#F8F9F9",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              {
                "paddingRight": 8,
              }
            }
          >
            <svg
              fill="none"
              height={16}
              testID="InLineNotification/Icon"
              viewBox="0 0 16 16"
              width={16}
            >
              <path
                d="M7.2 10.4h1.6V12H7.2v-1.6Zm0-6.4h1.6v4.8H7.2V4Zm.792-4C3.576 0 0 3.584 0 8s3.576 8 7.992 8C12.416 16 16 12.416 16 8s-3.584-8-8.008-8ZM8 14.4A6.398 6.398 0 0 1 1.6 8c0-3.536 2.864-6.4 6.4-6.4 3.536 0 6.4 2.864 6.4 6.4 0 3.536-2.864 6.4-6.4 6.4Z"
                fill="#2E3338"
              />
            </svg>
          </View>
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 12,
                    "letterSpacing": 0.12,
                    "lineHeight": 16,
                  },
                ]
              }
            >
              profileScreen.profilePictureDisclaimer
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "flexDirection": "column",
          },
          {
            "fontFamily": "Inter-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingBottom": 24,
            "paddingHorizontal": 24,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 100,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            {
              "attribute": "selectableItemBackground",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "#2E3338",
                "flexDirection": "row",
                "flexGrow": 1,
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 5,
              },
              undefined,
            ]
          }
          testID="SaveButton"
        >
          <Text
            maxFontSizeMultiplier={1}
            style={
              {
                "color": "#FFFFFF",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 16,
                "lineHeight": 24,
                "marginLeft": 0,
                "marginRight": 0,
              }
            }
          >
            save
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</RNCSafeAreaView>
`;
