// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WithdrawCeloScreen renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    [
      "bottom",
    ]
  }
  style={
    {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingHorizontal": 16,
      }
    }
    keyboardShouldPersistTaps="always"
    testID="KeyboardAwareScrollView"
  >
    <View>
      <Text
        style={
          {
            "color": "#2E3338",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 13,
            "lineHeight": 16,
            "marginBottom": 4,
            "marginTop": 24,
          }
        }
      >
        accountAddressLabel
      </Text>
      <View
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            {
              "borderColor": "#757575",
              "borderRadius": 4,
              "borderWidth": 1,
              "paddingHorizontal": 12,
            },
          ]
        }
      >
        <TextInput
          onChangeText={[Function]}
          placeholder="0x1234...5678"
          placeholderTextColor="#757575"
          style={
            [
              {
                "color": "#2E3338",
                "flex": 1,
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
                "paddingHorizontal": 0,
                "paddingVertical": 12,
              },
              {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
            ]
          }
          testID="AccountAddress"
          value=""
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            {
              "attribute": "selectableItemBackgroundBorderless",
              "rippleRadius": undefined,
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="ScanQR"
        >
          <svg
            fill="none"
            height={32}
            style={{}}
            viewBox="0 0 32 32"
            width={32}
          >
            <rect
              height={10}
              rx={3}
              stroke="#EEB93C"
              strokeWidth={2.75}
              style={{}}
              width={10}
              x={4}
              y={4}
            />
            <rect
              height={10}
              rx={3}
              stroke="#EEB93C"
              strokeWidth={2.75}
              style={{}}
              width={10}
              x={18}
              y={4}
            />
            <path
              d="M18 25v1a2 2 0 002 2h1M28 21v-1a2 2 0 00-2-2h-1M21 18h-1a2 2 0 00-2 2v1M25 28h1a2 2 0 002-2v-1"
              stroke="#EEB93C"
              strokeLinecap="round"
              strokeWidth={2.75}
              style={{}}
            />
            <rect
              height={10}
              rx={3}
              stroke="#EEB93C"
              strokeWidth={2.75}
              style={{}}
              width={10}
              x={4}
              y={18}
            />
          </svg>
        </View>
      </View>
      <Text
        style={
          {
            "color": "#2E3338",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 13,
            "lineHeight": 16,
            "marginBottom": 4,
            "marginTop": 24,
          }
        }
      >
        celoAmountLabel
      </Text>
      <View
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            {
              "borderColor": "#757575",
              "borderRadius": 4,
              "borderWidth": 1,
              "paddingHorizontal": 12,
            },
          ]
        }
      >
        <TextInput
          autoCapitalize="words"
          keyboardType="decimal-pad"
          onChangeText={[Function]}
          placeholder="0"
          placeholderTextColor="#757575"
          style={
            [
              {
                "color": "#2E3338",
                "flex": 1,
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
                "paddingHorizontal": 0,
                "paddingVertical": 12,
              },
              {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
            ]
          }
          testID="CeloAmount"
          value=""
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              undefined,
              {
                "opacity": 1,
              },
            ]
          }
          testID="MaxAmount"
        >
          <Text
            style={
              [
                {
                  "color": "#2E3338",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 14,
                  "lineHeight": 18,
                },
                {
                  "color": "#EEB93C",
                },
              ]
            }
          >
            maxSymbol
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      [
        {
          "flexDirection": "column",
        },
        {
          "padding": 16,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 100,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={false}
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackground",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#F1F0EB",
              "flexDirection": "row",
              "flexGrow": 1,
              "height": 48,
              "justifyContent": "center",
              "opacity": undefined,
              "paddingHorizontal": 24,
              "paddingVertical": 5,
            },
            undefined,
          ]
        }
        testID="WithdrawReviewButton"
      >
        <ActivityIndicator
          color="#666666"
          size="small"
          testID="Button/Loading"
        />
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</RNCSafeAreaView>
`;
