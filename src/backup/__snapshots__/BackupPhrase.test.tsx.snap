// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with backup completed 1`] = `
<RNCSafeAreaView
  edges={
    [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "space-between",
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "paddingHorizontal": 16,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <Modal
        animationType="none"
        deviceHeight={1334}
        deviceWidth={null}
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onBackdropPress={[Function]}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        panResponderThreshold={4}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="CancelButton"
      >
        <Text
          style={
            [
              {
                "color": "#1AB775",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              [
                {
                  "color": "#2E3338",
                },
                {
                  "color": "#666666",
                },
              ],
            ]
          }
        >
          cancel
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Text
          style={
            {
              "color": "#1AB775",
              "fontFamily": "Inter-Regular",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          moreInfo
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "flexGrow": 1,
        "padding": 16,
      }
    }
  >
    <View>
      <View>
        <View
          style={
            {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 2,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "column",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#2E3338",
                  "fontFamily": "Jost-Medium",
                  "fontSize": 22,
                  "lineHeight": 28,
                  "marginBottom": 16,
                }
              }
            >
              writeDownKeyExperimental
            </Text>
          </View>
        </View>
        <View
          accessibilityLabel=""
          style={
            {
              "alignContent": "center",
              "backgroundColor": "#F1F0EB",
              "borderRadius": 8,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "center",
              "marginTop": 8,
              "padding": 8,
            }
          }
          testID="AccountKeyWordsContainer"
        />
      </View>
      <Text
        style={
          {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 16,
            "lineHeight": 22,
            "marginTop": 16,
          }
        }
      >
        backupKeyWarning
      </Text>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`renders correctly with backup not completed 1`] = `
<RNCSafeAreaView
  edges={
    [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "space-between",
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "paddingHorizontal": 16,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <Modal
        animationType="none"
        deviceHeight={1334}
        deviceWidth={null}
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onBackdropPress={[Function]}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        panResponderThreshold={4}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="CancelButton"
      >
        <Text
          style={
            [
              {
                "color": "#1AB775",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              [
                {
                  "color": "#2E3338",
                },
                {
                  "color": "#666666",
                },
              ],
            ]
          }
        >
          cancel
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Text
          style={
            {
              "color": "#1AB775",
              "fontFamily": "Inter-Regular",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          moreInfo
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "flexGrow": 1,
        "padding": 16,
      }
    }
  >
    <View>
      <View>
        <View
          style={
            {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 2,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "column",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#2E3338",
                  "fontFamily": "Jost-Medium",
                  "fontSize": 22,
                  "lineHeight": 28,
                  "marginBottom": 16,
                }
              }
            >
              writeDownKeyExperimental
            </Text>
          </View>
        </View>
        <View
          accessibilityLabel=""
          style={
            {
              "alignContent": "center",
              "backgroundColor": "#F1F0EB",
              "borderRadius": 8,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "center",
              "marginTop": 8,
              "padding": 8,
            }
          }
          testID="AccountKeyWordsContainer"
        />
      </View>
      <Text
        style={
          {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 16,
            "lineHeight": 22,
            "marginTop": 16,
          }
        }
      >
        backupKeyWarning
      </Text>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "marginVertical": 16,
        "paddingHorizontal": 16,
      }
    }
  >
    <AndroidSwitch
      accessibilityRole="switch"
      enabled={true}
      on={false}
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="backupKeySavedSwitch"
      thumbTintColor="#E6E6E6"
      trackColorForFalse="#757575"
      trackColorForTrue="#1AB775"
      trackTintColor="#757575"
    />
    <Text
      onPress={[Function]}
      style={
        {
          "color": "#2E3338",
          "flex": 1,
          "fontFamily": "Inter-Regular",
          "fontSize": 16,
          "lineHeight": 22,
          "paddingLeft": 8,
        }
      }
    >
      savedConfirmation
    </Text>
  </View>
  <View
    style={
      [
        {
          "flexDirection": "column",
        },
        {
          "paddingBottom": 16,
          "paddingHorizontal": 16,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 100,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={false}
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackground",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#F1F0EB",
              "flexDirection": "row",
              "flexGrow": 1,
              "height": 48,
              "justifyContent": "center",
              "opacity": undefined,
              "paddingHorizontal": 24,
              "paddingVertical": 5,
            },
            undefined,
          ]
        }
        testID="backupKeyContinue"
      >
        <Text
          maxFontSizeMultiplier={1}
          style={
            {
              "color": "#666666",
              "fontFamily": "Inter-SemiBold",
              "fontSize": 16,
              "lineHeight": 22,
              "marginLeft": 0,
              "marginRight": 0,
            }
          }
        >
          continue
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`still renders when mnemonic doesnt show up 1`] = `
<RNCSafeAreaView
  edges={
    [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
          "justifyContent": "space-between",
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "paddingHorizontal": 16,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <Modal
        animationType="none"
        deviceHeight={1334}
        deviceWidth={null}
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onBackdropPress={[Function]}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        panResponderThreshold={4}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="CancelButton"
      >
        <Text
          style={
            [
              {
                "color": "#1AB775",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              },
              [
                {
                  "color": "#2E3338",
                },
                {
                  "color": "#666666",
                },
              ],
            ]
          }
        >
          cancel
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeBackgroundAndroid={
          {
            "attribute": "selectableItemBackgroundBorderless",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Text
          style={
            {
              "color": "#1AB775",
              "fontFamily": "Inter-Regular",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          moreInfo
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "flexGrow": 1,
        "padding": 16,
      }
    }
  >
    <View>
      <View>
        <View
          style={
            {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 2,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "column",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#2E3338",
                  "fontFamily": "Jost-Medium",
                  "fontSize": 22,
                  "lineHeight": 28,
                  "marginBottom": 16,
                }
              }
            >
              writeDownKeyExperimental
            </Text>
          </View>
        </View>
        <View
          accessibilityLabel=""
          style={
            {
              "alignContent": "center",
              "backgroundColor": "#F1F0EB",
              "borderRadius": 8,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "center",
              "marginTop": 8,
              "padding": 8,
            }
          }
          testID="AccountKeyWordsContainer"
        />
      </View>
      <Text
        style={
          {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 16,
            "lineHeight": 22,
            "marginTop": 16,
          }
        }
      >
        backupKeyWarning
      </Text>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
