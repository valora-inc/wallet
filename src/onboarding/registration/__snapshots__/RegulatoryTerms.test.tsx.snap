// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegulatoryTermsScreen renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "right",
      "bottom",
      "left",
    ]
  }
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    style={
      Object {
        "height": 35,
        "position": "absolute",
        "right": 10,
        "top": 10,
        "width": 60,
        "zIndex": 100,
      }
    }
  >
    <Text
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
         
    </Text>
  </RNCSafeAreaView>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingHorizontal": 24,
        "paddingTop": 40,
      }
    }
    testID="scrollView"
  >
    <View>
      <View
        style={
          Array [
            Object {
              "shadowColor": "rgba(46, 51, 56, 0.15)",
              "shadowOffset": Object {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 2,
            },
            undefined,
          ]
        }
      >
        <svg
          fill="none"
          height={32}
          viewBox="0 0 32 32"
          width={32}
        >
          <g>
            <path
              d="M18.39 26.77c1.072-8.36 5.002-13.12 10.943-17.434l-3.037-4.003c-3.886 2.98-8.13 7.205-10.095 13.032-1.608-4.76-4.958-8.94-10.363-13.032L2.667 9.425C9.41 14.228 12.807 19.61 13.744 26.77h4.646z"
              fill="#2E3338"
            />
          </g>
          <defs>
            <linearGradient
              gradientUnits="userSpaceOnUse"
              id="prefix__paint0_linear"
              x1={34.337}
              x2={28.937}
              y1={10.054}
              y2={30.49}
            >
              <stop
                offset={0.118}
                stopColor="#35D07F"
              />
              <stop
                offset={0.802}
                stopColor="#FBCC5C"
              />
            </linearGradient>
          </defs>
        </svg>
      </View>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Jost-Book",
            "fontSize": 26,
            "lineHeight": 32,
            "marginBottom": 24,
            "marginTop": 30,
          }
        }
      >
        terms.title
      </Text>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 14,
            "lineHeight": 18,
            "marginBottom": 15,
          }
        }
      >
        <Text
          onPress={[Function]}
          style={
            Object {
              "textDecorationLine": "underline",
            }
          }
        />
      </Text>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Jost-Medium",
            "fontSize": 22,
            "lineHeight": 28,
            "marginBottom": 10,
          }
        }
      >
        terms.heading1
      </Text>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 14,
            "lineHeight": 18,
            "marginBottom": 15,
          }
        }
      >
        <Text
          onPress={[Function]}
          style={
            Object {
              "textDecorationLine": "underline",
            }
          }
        />
      </Text>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Jost-Medium",
            "fontSize": 22,
            "lineHeight": 28,
            "marginBottom": 10,
          }
        }
      >
        terms.heading2
      </Text>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 14,
            "lineHeight": 18,
            "marginBottom": 15,
          }
        }
      >
        terms.goldDisclaimer, {"dailyLimitCUSD":1000}
      </Text>
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "flexDirection": "column",
        },
        Array [
          Object {
            "marginHorizontal": 24,
            "marginTop": 24,
          },
          null,
        ],
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 100,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackground",
            "rippleRadius": undefined,
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#D6EAF3",
            "flexGrow": 1,
            "height": 48,
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 24,
            "paddingVertical": 5,
          }
        }
        testID="AcceptTermsButton"
      >
        <Text
          maxFontSizeMultiplier={1}
          style={
            Object {
              "color": "#0768AE",
              "fontFamily": "Inter-SemiBold",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          accept
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
