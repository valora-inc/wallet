// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PictureInputScreen renders correctly 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackground",
        "rippleRadius": undefined,
        "type": "ThemeAttrAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "width": 64,
        },
      ]
    }
    testID="PictureInput"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
            Object {
              "backgroundColor": "hsl(0, 53%, 93%)",
              "borderRadius": 32,
              "height": 64,
              "width": 64,
            },
          ]
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "abc",
            }
          }
          style={
            Array [
              Object {
                "alignSelf": "center",
                "margin": "auto",
              },
              Object {
                "borderRadius": 32,
                "height": 64,
                "width": 64,
              },
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#F8F9F9",
          "borderRadius": 20,
          "bottom": -13,
          "height": 40,
          "justifyContent": "center",
          "left": 37,
          "position": "absolute",
          "width": 40,
        }
      }
    >
      <svg
        fill="none"
        height={13}
        style={Object {}}
        viewBox="0 0 13 13"
        width={13}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clip-rule="evenodd"
          d="M10.8667 4.94998L8.03333 2.14998L8.96667 1.21665C9.22222 0.961091 9.53622 0.833313 9.90867 0.833313C10.2807 0.833313 10.5944 0.961091 10.85 1.21665L11.7833 2.14998C12.0389 2.40554 12.1722 2.71398 12.1833 3.07531C12.1944 3.4362 12.0722 3.74442 11.8167 3.99998L10.8667 4.94998ZM9.9 5.93331L2.83333 13H0V10.1666L7.06667 3.09998L9.9 5.93331Z"
          fill="#178154"
          fill-rule="evenodd"
          style={Object {}}
        />
      </svg>
    </View>
  </View>,
  <Modal
    animationType="none"
    deviceHeight={1334}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      collapsable={false}
      deviceHeight={1334}
      deviceWidth={null}
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      nativeID="animatedComponent"
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      panResponderThreshold={4}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <RNCSafeAreaView
        edges={
          Array [
            "bottom",
            "left",
            "right",
            "top",
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "padding": 16,
              },
              Object {
                "borderRadius": 8,
              },
              Object {
                "elevation": 12,
                "shadowColor": "rgba(156, 164, 169, 0.4)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 12,
              },
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "maxHeight": "100%",
                  "padding": 24,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "padding": 0,
                },
              ],
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "marginVertical": 16,
                  },
                  Object {
                    "color": "#1AB775",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 18,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              chooseFromLibrary
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#E6E6E6",
                  "height": 1,
                  "width": "100%",
                },
                Object {},
              ]
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "marginVertical": 16,
                  },
                  Object {
                    "color": "#1AB775",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 18,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              takePhoto
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#E6E6E6",
                  "height": 1,
                  "width": "100%",
                },
                Object {},
              ]
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "marginVertical": 16,
                  },
                  Object {
                    "color": "#EA6042",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 18,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              removePhoto
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#E6E6E6",
                  "height": 1,
                  "width": "100%",
                },
                Object {
                  "backgroundColor": "#757575",
                },
              ]
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "marginVertical": 16,
                  },
                  Object {
                    "color": "#1AB775",
                    "fontFamily": "Inter-SemiBold",
                    "fontSize": 18,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              cancel
            </Text>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>,
]
`;
