diff --git a/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm b/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm
index cc9641c..b44594a 100644
--- a/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm
+++ b/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm
@@ -23,33 +23,8 @@
 #import <React/RCTFabricSurfaceHostingProxyRootView.h>
 #endif
 
-#ifdef FB_SONARKIT_ENABLED
-#import <FlipperKit/FlipperClient.h>
-#import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>
-#import <FlipperKitNetworkPlugin/FlipperKitNetworkPlugin.h>
-#import <FlipperKitReactPlugin/FlipperKitReactPlugin.h>
-#import <FlipperKitUserDefaultsPlugin/FKUserDefaultsPlugin.h>
-#import <SKIOSNetworkPlugin/SKIOSNetworkAdapter.h>
-
-static void InitializeFlipper(UIApplication *application)
-{
-  FlipperClient *client = [FlipperClient sharedClient];
-  SKDescriptorMapper *layoutDescriptorMapper = [[SKDescriptorMapper alloc] initWithDefaults];
-  [client addPlugin:[[FlipperKitLayoutPlugin alloc] initWithRootNode:application
-                                                withDescriptorMapper:layoutDescriptorMapper]];
-  [client addPlugin:[[FKUserDefaultsPlugin alloc] initWithSuiteName:nil]];
-  [client addPlugin:[FlipperKitReactPlugin new]];
-  [client addPlugin:[[FlipperKitNetworkPlugin alloc] initWithNetworkAdapter:[SKIOSNetworkAdapter new]]];
-  [client start];
-}
-#endif
-
 void RCTAppSetupPrepareApp(UIApplication *application)
 {
-#ifdef FB_SONARKIT_ENABLED
-  InitializeFlipper(application);
-#endif
-
 #if RCT_NEW_ARCH_ENABLED
   RCTEnableTurboModule(YES);
 #endif
diff --git a/node_modules/react-native/scripts/react-native-xcode.sh b/node_modules/react-native/scripts/react-native-xcode.sh
index 927ec76..71e6906 100755
--- a/node_modules/react-native/scripts/react-native-xcode.sh
+++ b/node_modules/react-native/scripts/react-native-xcode.sh
@@ -78,13 +78,26 @@ fi
 # shellcheck source=/dev/null
 source "$REACT_NATIVE_DIR/scripts/node-binary.sh"
 
+# Backported from https://github.com/facebook/react-native/commit/435245978122d34a78014600562517c3bf96f92e#diff-0eeea47fa4bace26fa6c492a03fa0ea3923a2d8d54b7894f7760cb9131ab65eb
+# TODO delete once we ugrade to RN >= 0.71
+# If hermes-engine is in the podfile.lock, it means that Hermes is a dependency of the project
+# and it is enabled. If not, it means that hermes is disabled.
+HERMES_ENABLED=$(grep hermes-engine podfile.lock)
+
+# If hermes-engine is not in the podfile.lock, it means that the app is not using Hermes.
+# Setting USE_HERMES is no the only way to set whether the app can use hermes or not: users
+# can also modify manually the Podfile.
+if [[ -z "$HERMES_ENABLED" ]]; then
+  USE_HERMES=false
+fi
+
 HERMES_ENGINE_PATH="$PODS_ROOT/hermes-engine"
 [ -z "$HERMES_CLI_PATH" ] && HERMES_CLI_PATH="$HERMES_ENGINE_PATH/destroot/bin/hermesc"
 
 # Hermes is enabled in new projects by default, so we cannot assume that USE_HERMES=1 is set as an envvar.
 # If hermes-engine is found in Pods, we can assume Hermes has not been disabled.
 # If hermesc is not available and USE_HERMES is either unset or true, show error.
-if [[  -f "$HERMES_ENGINE_PATH" && ! -f "$HERMES_CLI_PATH" ]]; then
+if [[ ! -z "$HERMES_ENABLED" && -f "$HERMES_ENGINE_PATH" && ! -f "$HERMES_CLI_PATH" ]]; then
   echo "error: Hermes is enabled but the hermesc binary could not be found at ${HERMES_CLI_PATH}." \
        "Perhaps you need to run 'bundle exec pod install' or otherwise " \
        "point the HERMES_CLI_PATH variable to your custom location." >&2
