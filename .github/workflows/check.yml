name: Check

on:
  # ..any pull request, workflow dispatch and merge queue (covers main)
  pull_request:
  workflow_dispatch:
  merge_group:
  # Cron job to run checks @ 8:30 pm daily on the latest commit on the default branch - main
  schedule:
    - cron: '30 20 * * *'

# Cancel any in progress run of the workflow for a given PR
# This avoids building outdated code
concurrency:
  # Fallback used github.ref_name as it is always defined
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  vulnerability:
    name: Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/yarn-install
      - run: ./scripts/ci_check_vulnerabilities.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/yarn-install
      - run: yarn run format:check
      - run: yarn run lint
      - run: yarn typecheck
      - run: yarn tsc -p .github/scripts
  yarn-lock:
    name: 'yarn.lock Up-to-date'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/yarn-install
      - run: git diff --exit-code
  licenses:
    name: Licenses
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/yarn-install
      - run: yarn check-licenses
  knip:
    name: Knip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/yarn-install
      - run: yarn knip
  # Ensure the release notes script is working
  release-notes:
    name: Release Notes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0
      - uses: ./.github/actions/yarn-install
      - run: yarn generate-release-notes
  # Sync Node.js version between package.json and eas.json
  eas-node-sync:
    name: EAS Node.js Version Sync
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0
        with:
          project_id: celo-mobile-mainnet
          credentials_json: ${{ secrets.MAINNET_SERVICE_ACCOUNT_KEY }}
      - name: Google Secrets
        id: google-secrets
        uses: google-github-actions/get-secretmanager-secrets@50ec04d56ddf2740b0bde82926cc742f90e06d2b # v2.2.4
        with:
          secrets: |-
            VALORA_BOT_TOKEN:celo-mobile-mainnet/VALORA_BOT_TOKEN
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.google-secrets.outputs.VALORA_BOT_TOKEN }}
          # See https://github.com/actions/checkout?tab=readme-ov-file#push-a-commit-to-a-pr-using-the-built-in-token
          ref: ${{ github.head_ref || github.ref }}
      - uses: ./.github/actions/yarn-install
      - run: yarn sync-eas-node-version
      - name: Check for EAS node version changes
        id: eas-node-version
        run: |
          if [ -n "$(git status --porcelain eas.json)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit EAS node version
        if: "${{ steps.eas-node-version.outputs.changes == 'true' && github.event_name == 'pull_request' && !startsWith(github.event.head_commit.message, 'chore: auto sync eas node version') }}"
        run: |
          git config user.name "Divvi Bot"
          git config user.email "89419329+divvi-bot@users.noreply.github.com"
          git add eas.json
          git commit -m "chore: auto sync eas node version"
          git push
